{"version":3,"sources":["Routes/HomePage/HomePage.jsx","Cases.fixtures.js","Routes/ListPage/ListPage.jsx","Routes/DetailsPage/DetailsPage.jsx","Routes/CasePage/Choices.component.jsx","Routes/CasePage/utilities.js","Routes/CasePage/Score.component.jsx","Routes/CasePage/Structure.component.jsx","Routes/CasePage/Review.component.jsx","Routes/CasePage/Relevance.component.jsx","Routes/CasePage/Success.component.jsx","Routes/CasePage/AddonTable.component.jsx","Routes/CasePage/Bullets.component.jsx","Routes/CasePage/CasePage.jsx","Routes/CreateStructure/CreateStructure.jsx","hooks/timers.js","Routes/ClearifyingQuestions/ClearifyingQuestions.jsx","Routes/index.jsx","App.js","index.js"],"names":["Title","Typography","Wrapper","styled","div","HomePage","push","useHistory","level","onClick","type","staticData","id","title","description","detailedDescription","color","Text","Header","Grid","GridItem","GridImage","props","Container","subTitle","onBack","map","item","key","block","danger","Body","goBack","useParams","html","find","e","toString","dangerouslySetInnerHTML","__html","RadioButton","Radio","Button","RadioGroup","Group","RadioContainer","RadioBtn","OptionText","Choices","onOptionChange","currentSelectedIndex","choices","optionFeedback","length","onChange","defaultValue","value","index","answer","getNextLink","globalFlags","is_link_direct","conditionId","current","revenue_path_flag","cost_path_flag","non_ticket_revenue_path_flag","alert","links_to","transformRes","resp","json","Object","entries","forEach","questionId","scoreMap","choice","sum","score","reduce","acc","maxIndex","maxScore","k","v","correctAnswer","defaultFlags","ticket_revenue_path_flag","setFlags","question","flags","tracePath","allQuestions","scores","nextQuestion","selectedOption","options","option","typeScore","getCorrectType","successMessage","getMaxScores","questions","initialQuestion","rigor","judgment","structuring","synthesis","getPercent","total","achieved","Math","ceil","typesText","millisToMinutesAndSeconds","millis","minutes","floor","seconds","toFixed","ms","ss","Mains","Average","Bars","Bar","Heading","AvgCard","Card","LargeText","ChartWrapper","Charter","Score","usersScore","caseDetails","console","log","React","useMemo","temp","graph","max","data","subject","average","user","fullMark","userScore","totalScore","utils","keys","toUpperCase","percent","strokeColor","percentage","status","cx","cy","outerRadius","width","height","dataKey","name","stroke","fill","fillOpacity","Response","HeaderText","ResponseBody","StructureInfo","Space","StructureMain","StructureChild","RecommendedHeading","Structure","useState","answers","extraInfo","recommended","setRecommended","useEffect","a","fetch","res","getData","structureData","JSON","parse","localStorage","getItem","timeTaken","parseInt","children","child","info","Panel","Collapse","Solutions","Question","Accordion","HeadContent","Option","isCorrect","isWrong","Review","selectedOptions","focusQuestions","selectedMap","accum","isfocus","filter","selected","optionIndex","wrongAnswer","strong","expandIconPosition","expandIcon","isActive","header","explanation","Cards","CardInner","Label","LabelSuff","MainLabel","Relevance","items","relevent","irrelevent","relevant","Success","setSelected","ev","style","defaultSelectedKeys","mode","Item","Table","table","AddonTable","addonTable","inputAnswer","handleChange","submitInput","tableData","tables","i","rows","row","columns","col","label","expectInput","placeholder","addonAfter","Bullets","bulletData","bullets","QuestionText","Main","QuestionB","Options","NextButton","Image","img","qID","currentQuestion","setCurrentQuestion","isNextDisabled","setIsNextDisabled","allSelectedOptions","useRef","setCurrentSelectedIndex","allQuestionsRef","setAddonTable","inputRef","setInputAnswer","setOptionFeedback","maxScores","setMaxScore","goNext","undefined","tbl","addOnTable","currentQ","target","Number","messageDescription","messageDescriptionHigh","messageDescriptionLow","groupedScore","x","intro","headerText","titleText","disabled","size","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","image","src","show_feedback","feedback_success","feedback_failure","AddStructure","RootNodeContainer","ChildNodeContainer","RootNode","ChildNode","Box","Tree","defaultTree","defaultInput","CreateStructure","treeData","setTreeData","inputRefs","timeElapsed","handleNodeEnterPress","rootId","split","child2","newTreeData","setTimeout","document","getElementById","focus","callback","delay","savedCallback","setInterval","clearInterval","useInterval","handleInputChange","childId","tree","autoComplete","onPressEnter","PlusCircleOutlined","setItem","stringify","Questions","ClarifyingQuestions","setQuestions","selectedQuestion","setSelectedQuestion","list","text","imageUrl","alt","prevQuestions","ques","handleClick","Router","exact","path","App","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.3f783052.chunk.js","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button } from 'antd'\nconst { Title } = Typography\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    flex-direction: column;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    function handleClick() {\n        push('list')\n    }\n    return (\n        <Wrapper>\n            <div>\n                <Title level={5}>\n                    Welcome to Caseadilla where we help you chew case interviews\n                    and land opportunities of your choice\n                </Title>\n            </div>\n            <div>\n                <Button onClick={handleClick} type=\"primary\">Start Chewing</Button>\n            </div>\n        </Wrapper>\n    )\n}\n","const staticData = [\n    {\n        id: 1,\n        title: 'Drug Case',\n        description:\n            'Help the Client (a drug manufacturer) to set a suitable price for their new drug',\n        detailedDescription:\n            'DRUG CASE OVERVIEW <br/> Today, we are going to discuss the case of a pharmaceutical company based in the U.S. The client has developed a new drug, PrevenT (Prevent Thrombosis), that helps reduce the rate at which a particular complication of hip-replacement surgery, deep-vein thrombosis (DVT), occurs. <br/>What you need to know is that DVT can lead to very serious medical conditions, including higher risk of pulmonary embolism (PE) or major bleeding. <br/>PrevenT will directly compete against Clearvenax, an established product that is also used to reduce rates of DVT and hence DVT-related complications. Clearvenax is sold at $4 per dose and has a variable production cost of $1 per dose. The client has asked you to help set a suitable price for PrevenT. <br/>',\n        color: '#ccf6c8',\n    },\n    {\n        id: 2,\n        title: 'Airline Case',\n        description:\n            'Help the client (a low cost carrier) to remain profitable despite a recent fuel price hike',\n        detailedDescription:\n            \" 'AIRLINE CASE OVERVIEW <br/> Today, we'll discuss the case of our client, a low-cost carrier (LCC) airline that is among the largest in Asia. After initial losses when it was established, a few years ago, it has finally become profitable. The company's profitability is now threatened, however, by a sharp increase in fuel prices, to the tune of more than 50 percent.<br/>       The client is therefore questioning its business model and looking to develop an immediate response to the situation that will ensure a return to profitability. Your task is also to help develop a strategy to ensure that the company remains profitable for the years to come.<br/>\",\n        color: '#fafcc2',\n    },\n]\nexport { staticData }\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n    margin-bottom:16px;\n`\nconst Grid = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 16px;\n    flex-wrap: wrap;\n    margin: -32px auto;\n    justify-content: center;\n`\nconst GridItem = styled.div`\n    max-width: 300px;\n    margin-top: 32px;\n    margin: 16px;\n`\n\nconst GridImage = styled.div`\n    width: 300px;\n    height: 300px;\n    background-color: ${(props) => props.color};\n`\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    align-content: center;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    function handleClick(id) {\n        push(`/details/${id}`)\n    }\n    function goHome(id) {\n        push(`/`)\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Home\" onBack={goHome} />\n            </Header>\n\n            <Grid>\n                {staticData.map((item) => (\n                    <GridItem key={item.id}>\n                        <GridImage color={item.color} />\n                        <Container>\n                            <Title level={5}>{item.title}</Title>\n                        </Container>\n                        <Container>\n                            <Text>{item.description}</Text>\n                        </Container>\n                        <Container>\n                            <Button\n                                block\n                                danger\n                                onClick={() => handleClick(item.id)}\n                            >\n                                Try {item.title}\n                            </Button>\n                        </Container>\n                    </GridItem>\n                ))}\n            </Grid>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    align-content: center;\n`\n\nexport const Body = styled.div`\n    height: 300px;\n    margin-top: 48px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 0 16px;\n`\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nexport default function HomePage() {\n    const { push, goBack } = useHistory()\n    const { id } = useParams()\n\n    function handleStructureClick(id) {\n        push(`/create-structure/${item.id}`)\n    }\n    function handleClearifyingQuestionsClick(id) {\n        push(`/clearifying-questions/${item.id}`)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Case Library\" onBack={goBack} />\n            </Header>\n            <Body>\n                <Title level={5}>{item.title}</Title>\n                <div\n                    dangerouslySetInnerHTML={createMarkup(\n                        item.detailedDescription\n                    )}\n                />\n            </Body>\n            <br />\n            <Container>\n                <Button type=\"primary\" block onClick={handleClearifyingQuestionsClick}>\n                    Ask clarifying questions\n                </Button>\n                &nbsp;&nbsp;\n                <Button type=\"primary\" block onClick={handleStructureClick}>\n                    Create Strcuture\n                </Button>\n            </Container>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Radio, Typography } from 'antd'\n\nconst RadioButton = Radio.Button\nconst RadioGroup = Radio.Group\nconst { Text } = Typography\n\nexport const RadioContainer = styled(RadioGroup)`\n    &&& {\n        width: 100%;\n    }\n`\nexport const RadioBtn = styled(RadioButton)`\n    display: block;\n    margin-bottom: 8px;\n    width: 100%;\n    height: auto;\n    line-height: 1.5;\n    padding: 8px;\n`\nconst OptionText = styled(Text)`\n    font-size: 16px;\n`\n\nexport default function Choices({\n    onOptionChange,\n    currentSelectedIndex,\n    choices,\n    optionFeedback,\n}) {\n    if (!choices || choices.length === 0) {\n        return null\n    }\n    return (\n        <>\n            <RadioContainer\n                onChange={onOptionChange}\n                defaultValue=\"a\"\n                value={currentSelectedIndex}\n            >\n                {choices.map((item, index) => (\n                    <RadioBtn key={index} value={index}>\n                        <OptionText>{item.answer}</OptionText>\n                    </RadioBtn>\n                ))}\n            </RadioContainer>\n            <Text>{optionFeedback}</Text>\n        </>\n    )\n}\n","export function getGroupedScore(list) {\n    return list\n        .filter((x) => x.score)\n        .map((x) => x.score)\n        .reduce(\n            (accum, item) => {\n                accum.judgment = accum.judgment + item.judgment\n                accum.rigor = accum.rigor + item.rigor\n                accum.structuring = accum.structuring + item.structuring\n                accum.synthesis = accum.synthesis + item.synthesis\n                return accum\n            },\n            { judgment: 0, rigor: 0, structuring: 0, synthesis: 0 }\n        )\n}\n\nexport function getNextLink(item, globalFlags) {\n    if (item.is_link_direct === false) {\n        const qid = item.conditionId\n        switch (qid) {\n            case 1:\n                if (globalFlags.current.revenue_path_flag) {\n                    return 'SlideAirlineQ3_121_6_0'\n                } else {\n                    return 'SlideAirlineQ3_121_2_0'\n                }\n            case 2:\n                if (globalFlags.current.cost_path_flag === false) {\n                    return 'SlideAirlineQ4_59_3_0'\n                } else {\n                    return 'SlideAirlineQ4_59_6_0'\n                }\n\n            case 3:\n                if (globalFlags.current.non_ticket_revenue_path_flag) {\n                    if (globalFlags.current.cost_path_flag === false) {\n                        return 'SlideAirlineQ4_59_3_0'\n                    } else {\n                        return 'SlideAirlineQ4_59_6_0'\n                    }\n                } else {\n                    if (globalFlags.current.cost_path_flag === false) {\n                        return 'SlideAirlineQ4_59_5_0b'\n                    } else {\n                        return 'SlideAirlineQ4_59_5_0c'\n                    }\n                }\n            default:\n                alert('mismatch')\n                return\n        }\n    }\n    return item.links_to\n}\n\nexport function transformRes(resp) {\n    const json = { ...resp }\n    Object.entries(json).forEach(([key, value]) => {\n        value.questionId = key;\n        if (value.choices && value.choices.length) {\n            const scoreMap = {}\n            value.choices.forEach((choice, index) => {\n                const sum = Object.entries(choice.score)\n                    .map(([k, v]) => v)\n                    .reduce((acc, item) => (acc += item), 0)\n                scoreMap[index] = sum\n            })\n            let maxIndex = null\n            let maxScore = -100\n            Object.entries(scoreMap).forEach(([k, v]) => {\n                if (v > maxScore) {\n                    maxScore = v\n                    maxIndex = k\n                }\n            })\n            // console.log('q: ',key,'correct index : ',maxIndex, 'correct score: ', value.choices[maxIndex].score)\n            value.choices[maxIndex].correctAnswer = true\n        }\n    })\n    return json\n}\n\nconst defaultFlags = {\n    current: {\n        revenue_path_flag: false,\n        cost_path_flag: false,\n        non_ticket_revenue_path_flag: false,\n        ticket_revenue_path_flag: false,\n    },\n}\n\nlet globalFlags = defaultFlags\n\nexport function setFlags(question, flags) {\n    if (question.revenue_path_flag || question.revenue_path_flag === false) {\n        flags.current.revenue_path_flag = question.revenue_path_flag\n    }\n    if (question.cost_path_flag || question.cost_path_flag === false) {\n        flags.current.cost_path_flag = question.cost_path_flag\n    }\n    if (\n        question.non_ticket_revenue_path_flag ||\n        question.non_ticket_revenue_path_flag === false\n    ) {\n        flags.current.non_ticket_revenue_path_flag =\n            question.non_ticket_revenue_path_flag\n    }\n    if (\n        question.ticket_revenue_path_flag ||\n        question.ticket_revenue_path_flag === false\n    ) {\n        flags.current.ticket_revenue_path_flag =\n            question.ticket_revenue_path_flag\n    }\n}\n\nfunction getCorrectType(options, type) {\n    let maxIndex = 0\n    let maxScore = -100\n    options.forEach((option, index) => {\n        const typeScore = option.score[type] || 0\n        if (typeScore > maxScore) {\n            maxScore = typeScore\n            maxIndex = index\n        }\n    })\n    return options[maxIndex]\n}\n\nfunction tracePath(question, allQuestions, scores, type) {\n    let nextQuestion = null\n    if (!question.choices) {\n        nextQuestion = allQuestions[getNextLink(question, globalFlags)]\n    } else {\n        const selectedOption = getCorrectType(question.choices, type)\n        nextQuestion = allQuestions[getNextLink(selectedOption, globalFlags)]\n        scores[type] += selectedOption.score[type]\n    }\n    setFlags(nextQuestion, globalFlags)\n    if (!nextQuestion.successMessage) {\n        tracePath(nextQuestion, allQuestions, scores, type)\n    }\n}\n\nexport function getMaxScores(questions, id) {\n    let initialQuestion = null\n    initialQuestion =\n        id === '1'\n            ? 'SlideDrugProblemStatement'\n            : 'SlideAirlineProblemStatement'\n\n    globalFlags = defaultFlags\n    const scores = { rigor: 0, judgment: 0, structuring: 0, synthesis: 0 }\n    tracePath(questions[initialQuestion], questions, scores, 'rigor')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'judgment')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'structuring')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'synthesis')\n    return scores\n}\n\nexport function getPercent(total, achieved) {\n    return Math.ceil((achieved / total) * 100)\n}\n\nexport function getColor(percentage) {\n    if (percentage > 70) {\n        return '#4caf50'\n    }\n    if (percentage > 30) {\n        return '#ffc107'\n    }\n    return '#f44336'\n}\n\nconst typesText = {\n    judgment: 'indicating your intuition in making choices',\n    rigor: 'indicating your quantitative decision making',\n    structuring: 'indicating your organization of thoughts/idea',\n    synthesis: 'ability to convey more in less',\n}\nexport function getTypeText(type) {\n    return typesText[type]\n}\n\nexport function getWeightedScore(userScore, totalScore) {\n    // ((100*user_rigor_score)/max_rigor_calculated_value) *assigned_weight\n    const judgment = ((100 * userScore.judgment) / totalScore.judgment) * 0.25\n    const rigor = ((100 * userScore.rigor) / totalScore.rigor) * 0.25\n    const structuring =\n        ((100 * userScore.structuring) / totalScore.structuring) * 0.25\n    const synthesis =\n        ((100 * userScore.synthesis) / totalScore.synthesis) * 0.25\n    return Math.ceil(judgment + rigor + structuring + synthesis);    \n}\n\n\nexport function millisToMinutesAndSeconds(millis) {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    const ms = minutes>1 ?'minutes': 'minute';\n    const ss = seconds > 1 ? 'seconds': 'second'\n    return `${minutes} ${ms}, ${seconds} ${ss}`;\n  }\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as utils from './utilities'\nimport { Typography, Progress, Card, Tooltip } from 'antd'\nimport {\n    Radar,\n    RadarChart,\n    PolarGrid,\n    Legend,\n    PolarAngleAxis,\n    PolarRadiusAxis,\n} from 'recharts'\n\nconst { Text, Title } = Typography\n\nconst Wrapper = styled.div``\nconst Mains = styled.div`\n    display: flex;\n`\nconst Average = styled.div`\n    padding: 8px;\n`\nconst Bars = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n`\nconst Bar = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    min-height: 120px;\n    justify-content: space-evenly;\n    &:nth-child(2n + 2) {\n        padding-left: 28px;\n    }\n    &:nth-child(n + 3) {\n        margin-top: 40px;\n    }\n`\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\nconst AvgCard = styled(Card)`\n    width: 200px;\n    height: 100%;\n    margin-right: 16px;\n    .ant-card-body {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        padding: 0;\n        height: 200px;\n    }\n`\nconst LargeText = styled.div`\n    font-size: 48px;\n    font-weight: bold;\n`\nconst ChartWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`\nconst Charter = styled.div``\n\nexport default function Score({ usersScore, maxScore, caseDetails }) {\n    console.log('User score: ',usersScore)\n    console.log('Max score: ',maxScore)\n    const scores = React.useMemo(()=>{\n        const temp = {};\n        Object.entries(usersScore).forEach(([k,v])=>{\n            temp[k] = maxScore[k] >= v ? v : maxScore[k] - (v - maxScore[k])\n        });\n        return temp;\n    },[usersScore,maxScore])\n    console.log('Adjusted score: ',scores)\n\n    const graph = React.useMemo(() => {\n        let max = -100\n        Object.entries(maxScore).forEach(([, v]) => {\n            if (v > max) {\n                max = v\n            }\n        })\n        const data = [\n            {\n                subject: 'Judgment',\n                average: maxScore.judgment - 4,\n                user: scores.judgment,\n                fullMark: maxScore.judgment,\n            },\n            {\n                subject: 'Rigor',\n                average: maxScore.rigor - 10,\n                user: scores.rigor,\n                fullMark: maxScore.rigor,\n            },\n            {\n                subject: 'Structuring',\n                average: maxScore.structuring - 8,\n                user: scores.structuring,\n                fullMark: maxScore.structuring,\n            },\n            {\n                subject: 'Synthesis',\n                average: maxScore.synthesis - 9,\n                user: scores.synthesis,\n                fullMark: maxScore.synthesis,\n            },\n        ]\n        return { data, max }\n    }, [maxScore, scores])\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared Score`}\n                </Title>\n            </Heading>\n            <Mains>\n                <Average>\n                    <AvgCard title=\"Weighted average\">\n                        <LargeText>\n                            {utils.getWeightedScore(scores, maxScore)}%\n                        </LargeText>\n                    </AvgCard>\n                </Average>\n                <Bars>\n                    {Object.keys(maxScore).map((item) => (\n                        <Bar key={item}>\n                            <Text>\n                                <b>{`${item.toUpperCase()} : `}</b>{' '}\n                                {utils.getTypeText(item)}\n                            </Text>\n                            <Tooltip\n                                title={`${scores[item]} out of ${maxScore[item]}`}\n                            >\n                                <Progress\n                                    percent={utils.getPercent(\n                                        maxScore[item],\n                                        scores[item]\n                                    )}\n                                    strokeColor={utils.getColor(\n                                        utils.getPercent(\n                                            maxScore[item],\n                                            scores[item]\n                                        )\n                                    )}\n                                    status=\"active\"\n                                />\n                            </Tooltip>\n                        </Bar>\n                    ))}\n                </Bars>\n            </Mains>\n            <ChartWrapper>\n                <Charter>\n                    <RadarChart\n                        cx={300}\n                        cy={250}\n                        outerRadius={150}\n                        width={500}\n                        height={500}\n                        data={graph.data}\n                    >\n                        <PolarGrid />\n                        <PolarAngleAxis dataKey=\"subject\" />\n                        <PolarRadiusAxis />\n                        <Radar\n                            name=\"You\"\n                            dataKey=\"user\"\n                            stroke=\"#8884d8\"\n                            fill=\"#8884d8\"\n                            fillOpacity={0.6}\n                        />\n                        <Radar\n                            name=\"Average\"\n                            dataKey=\"average\"\n                            stroke=\"#82ca9d\"\n                            fill=\"#82ca9d\"\n                            fillOpacity={0.6}\n                        />\n                        <Legend />\n                    </RadarChart>\n                </Charter>\n            </ChartWrapper>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography } from 'antd'\nimport * as utils from './utilities'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div``\nconst Mains = styled.div`\n    display: flex;\n`\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\n\nconst Response = styled.div`\n    border: 1px solid #e6e6e6;\n    width: 100%;\n`\nconst Header = styled.div`\n    color: white;\n    background-color: ${(props) => props.color || '#1890ff'};\n    padding: 16px;\n    display: flex;\n    justify-content: space-between;\n`\nconst HeaderText = styled(Text)`\n    color: white;\n    font-weight: 600;\n`\nconst ResponseBody = styled.div`\n    padding: 16px;\n`\nconst StructureInfo = styled.div`\n    display: flex;\n    padding: 16px 0px;\n    border-bottom: 1px solid #e6e6e6;\n    border-top: 1px solid #e6e6e6;\n`\nconst Space = styled.div`\n    margin-top: 16px;\n`\nconst StructureMain = styled.div`\n    max-width: 50%;\n    width: 50%;\n`\nconst StructureChild = styled.div`\n    min-height: 48px;\n`\nconst RecommendedHeading = styled.div`\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n`\n\nexport default function Structure({ caseDetails }) {\n    const [recommended, setRecommended] = React.useState({\n        answers: [],\n        extraInfo: [],\n    })\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/success-structure.json`,\n                    {}\n                )\n                const resp = await res.json()\n                setRecommended(resp)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [])\n\n    const structureData = JSON.parse(localStorage.getItem('structure'))\n    const timeTaken = parseInt(localStorage.getItem('structureTime'), 10)\n\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared Structure`}\n                </Title>\n            </Heading>\n            <Mains>\n                <Response>\n                    <Header>\n                        <HeaderText>Your response</HeaderText>\n                        <HeaderText>\n                            {`Time Taken:  ${utils.millisToMinutesAndSeconds(timeTaken)}. Avg time : ${utils.millisToMinutesAndSeconds(2000000)}`}\n                        </HeaderText>\n                    </Header>\n                    <ResponseBody>\n                        <Text>\n                            Problem statement: {caseDetails.description}\n                        </Text>\n                        <Space />\n                        {structureData.map((item) => (\n                            <StructureInfo key={item.id}>\n                                <StructureMain>\n                                    <Text>{item.value}</Text>\n                                </StructureMain>\n                                <StructureChild>\n                                    <ul>\n                                        {item.children.map((child) => (\n                                            <li key={child.id}>\n                                                {child.value}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </StructureChild>\n                            </StructureInfo>\n                        ))}\n                    </ResponseBody>\n                </Response>\n            </Mains>\n            <br />\n            <Mains>\n                <Response>\n                    <Header color=\"#305D7B\">\n                        <HeaderText>RocketBlocks suggested answer</HeaderText>\n                    </Header>\n                    <ResponseBody>\n                        <Text>\n                            Problem statement: {caseDetails.description}\n                        </Text>\n                        <Space />\n                        {recommended.answers.map((item) => (\n                            <StructureInfo key={item.id}>\n                                <StructureMain>\n                                    <Text>{item.value}</Text>\n                                </StructureMain>\n                                <StructureChild>\n                                    <ul>\n                                        {item.children.map((child) => (\n                                            <li key={child.id}>\n                                                {child.value}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </StructureChild>\n                            </StructureInfo>\n                        ))}\n                        {recommended.extraInfo.map((info) => (\n                            <div key={info.id}>\n                                <RecommendedHeading>\n                                    <Text>\n                                        <b>{info.title}</b>\n                                    </Text>\n                                </RecommendedHeading>\n                                <div>\n                                    <ul>\n                                        {info.children.map((child) => (\n                                            <li key={child.id}>\n                                                {child.value}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        ))}\n                    </ResponseBody>\n                </Response>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Collapse } from 'antd'\nconst { Title, Text } = Typography\nconst { Panel } = Collapse\n\nconst Wrapper = styled.div``\nconst Mains = styled.div``\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\nconst Solutions = styled.div``\nconst Question = styled(Panel)`\n    &&& {\n        padding: 12px 0px;\n        background: white;\n        margin-bottom: 16px;\n    }\n`\nconst Accordion = styled(Collapse)`\n    &&& {\n        background: white;\n    }\n`\nconst HeadContent = styled.div`\n    max-width: 90%;\n`\n\nconst Option = styled.div`\n    padding: 8px;\n    border: 1px solid #d0cccc;\n    border-radius: 8px;\n    margin-bottom: 16px;\n    min-height: 61px;\n    display: flex;\n    align-items: center;\n    ${(props) =>\n        props.isCorrect\n            ? 'background-color:#17b978;color:white;border:none;'\n            : ''}\n    ${(props) =>\n        props.isWrong\n            ? 'background-color:#f85959;color:white;border:none;'\n            : ''}\n`\n\nexport default function Review({ selectedOptions, allQuestions, caseDetails }) {\n    const focusQuestions = React.useMemo(() => {\n        const selectedMap = selectedOptions.reduce((accum, item) => {\n            accum[item.questionId] = item\n            return accum\n        }, {})\n        return Object.entries(allQuestions)\n            .map(([k, v]) => (v.isfocus ? v : null))\n            .filter((item) => {\n                if(!item){\n                    return false\n                }\n                const selected = selectedMap[item.questionId]\n                if (selected && selected.correctAnswer) {\n                    return false\n                }\n                return true\n            })\n            .map((item) => {\n                const selected = selectedMap[item.questionId]\n                if (selected && !selected.correctAnswer) {\n                    item.choices[selected.optionIndex].wrongAnswer = true\n                }\n                return item\n            })\n    }, [allQuestions, selectedOptions])\n\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared Review`}\n                </Title>\n            </Heading>\n            <Mains>\n                <Solutions>\n                    <Text strong>\n                        These are some questions where you could have chosen\n                        different answers\n                    </Text>\n                    <br />\n                    <br />\n                    <Accordion\n                        expandIconPosition=\"right\"\n                        expandIcon={({ isActive }) => {\n                            return (\n                                <Text strong>\n                                    {isActive\n                                        ? 'Hide Solution'\n                                        : 'View Solution'}\n                                </Text>\n                            )\n                        }}\n                    >\n                        {focusQuestions.map((question) => (\n                            <Question\n                                header={\n                                    <HeadContent>\n                                        {question.question}\n                                    </HeadContent>\n                                }\n                                key={question.questionId}\n                            >\n                                <div>\n                                    {question.choices.map((item, index) => (\n                                        <Option\n                                            key={index}\n                                            isCorrect={\n                                                item.correctAnswer === true\n                                            }\n                                            isWrong={item.wrongAnswer === true}\n                                        >\n                                            {item.answer}\n                                        </Option>\n                                    ))}\n                                </div>\n                                <Text>{question.explanation}</Text>\n                            </Question>\n                        ))}\n                    </Accordion>\n                </Solutions>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Card, Collapse } from 'antd'\nconst { Title, Text } = Typography\nconst { Panel } = Collapse\nconst Wrapper = styled.div``\nconst Mains = styled.div``\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\nconst Cards = styled.div`\n    display: flex;\n`\nconst CardInner = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst Label = styled(Text)`\n    font-size: 12px;\n    color: gray;\n`\nconst LabelSuff = styled(Text)`\n    font-size: 10px;\n    color: gray;\n`\nconst MainLabel = styled(Text)`\n    font-size: 20px;\n    font-weight: 600;\n    color: ${(props) => props.color};\n`\n\nconst Solutions = styled.div`\n    margin-top: 48px;\n`\nconst Question = styled(Panel)`\n&&&{\n  padding: 12px 0px;\n  background: white;\n  margin-bottom: 16px;\n}\n`\nconst Accordion = styled(Collapse)`\n&&&{\n  background: white;\n}\n`\n\nexport default function Relevance({ usersScore, maxScore, caseDetails }) {\n    const questions = React.useMemo(() => {\n        const items = JSON.parse(localStorage.getItem('questions'))\n        const map = {\n            relevent: [],\n            irrelevent: [],\n        }\n        items.forEach((item) => {\n            if (item.relevant === true) {\n                map.relevent.push(item)\n                return\n            }\n            if (item.relevant === false) {\n                map.irrelevent.push(item)\n                return\n            }\n        })\n        return map\n    }, [])\n\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared Relevance`}\n                </Title>\n            </Heading>\n            <Mains>\n                <Cards>\n                    <Card>\n                        <CardInner>\n                            <Label>YOU ASKED</Label>\n                            <MainLabel color=\"green\">\n                                {questions.relevent.length}\n                            </MainLabel>\n                            <LabelSuff>RELEVENT QUESTIONS</LabelSuff>\n                        </CardInner>\n                    </Card>\n                    &nbsp;&nbsp;&nbsp;\n                    <Card>\n                        <CardInner>\n                            <Label>YOU ASKED</Label>\n                            <MainLabel color=\"red\">\n                                {questions.irrelevent.length}\n                            </MainLabel>\n                            <LabelSuff>IRRELEVENT QUESTIONS</LabelSuff>\n                        </CardInner>\n                    </Card>\n                </Cards>\n                <Solutions>\n                    <Text strong>\n                        These are some questions which we think you could have\n                        avoided\n                    </Text>\n                    <br />\n                    <br />\n                    <Accordion\n                        expandIconPosition=\"right\"\n                        expandIcon={({ isActive }) => {\n                            return <Text strong>{isActive ? 'Hide Solution': 'View Solution'}</Text>\n                        }}\n                    >\n                        {questions.irrelevent.map((question) => (\n                            <Question header={question.question} key={question.id}>\n                                <Text>{question.explanation}</Text>\n                            </Question>\n                        ))}\n                    </Accordion>\n                </Solutions>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Score from './Score.component'\nimport Structure from './Structure.component'\nimport Review from './Review.component'\nimport Relevance from './Relevance.component'\n\nimport {  Menu } from 'antd'\n\nconst Wrapper = styled.div`\n    display: flex;\n`\nexport const Mains = styled.div`\n    padding-left: 16px;\n    padding-top: 16px;\n`\n\nexport default function Success({ usersScore, maxScore, caseDetails, selectedOptions, allQuestions }) {\n    const [selected, setSelected] = React.useState('1')\n   \n    return (\n        <Wrapper>\n            <div>\n                <Menu\n                    onClick={(ev)=>setSelected(ev.key)}\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['1']}\n                    mode=\"inline\"\n                >\n                    <Menu.Item key=\"1\">Score</Menu.Item>\n                    <Menu.Item key=\"2\">Structure</Menu.Item>\n                    <Menu.Item key=\"3\">Review</Menu.Item>\n                    <Menu.Item key=\"4\">Relevance</Menu.Item>\n                </Menu>\n            </div>\n            <Mains>\n                {selected === '1' && (\n                    <Score usersScore={usersScore} maxScore={maxScore} caseDetails={caseDetails} />\n                )}\n                {selected === '2' && (\n                    <Structure caseDetails={caseDetails} />\n                )}\n                {selected === '3' && (\n                    <Review caseDetails={caseDetails} selectedOptions={selectedOptions} allQuestions={allQuestions} />\n                )}\n                {selected === '4' && (\n                    <Relevance caseDetails={caseDetails} />\n                )}\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Input } from 'antd'\nconst { Title, Text } = Typography\n\nexport const Table = styled.table`\n    width: 100%;\n    margin-top: 16px;\n    border: 1px solid #d7cdcd;\n    td,\n    th {\n        padding: 4px;\n        border-right: 1px solid #d7cdcd;\n    }\n    tr {\n        border-bottom: 1px solid #d7cdcd;\n    }\n`\n\nexport default function AddonTable({\n    addonTable,\n    inputAnswer,\n    handleChange,\n    submitInput,\n}) {\n    return (\n        <div>\n            {Object.keys(addonTable).length > 0 && (\n                <div>\n                    <Title level={5}>{addonTable.question}</Title>\n                    {addonTable.tableData.tables.map((table, i) => (\n                        <Table key={i}>\n                            <thead>\n                                {table.title && (\n                                    <tr>\n                                        <th>{table.title}</th>\n                                    </tr>\n                                )}\n                            </thead>\n                            <tbody>\n                                {table.rows.map((row, id) => (\n                                    <tr key={id}>\n                                        {row.columns.map((col, id) => (\n                                            <td key={id}>{col.label}</td>\n                                        ))}\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    ))}\n                    {addonTable.expectInput && (\n                        <div>\n                            <br />\n                            <Input\n                                onChange={handleChange}\n                                placeholder=\"Enter value\"\n                                addonAfter={\n                                    <span onClick={submitInput}>Submit</span>\n                                }\n                            />\n                            <div>\n                                <br />\n                                {inputAnswer && <Text>{inputAnswer}</Text>}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Typography, Input } from 'antd'\nconst { Text } = Typography\n\nexport default function Bullets({\n    question,\n    inputAnswer,\n    handleChange,\n    submitInput,\n}) {\n    return (\n        <div>\n            {Object.keys(question).length && (\n                <>\n                    <Text>{question.bulletData.title}</Text>\n                    <ul>\n                        {question.bulletData.bullets.map((e, i) => (\n                            <li key={i}>{e}</li>\n                        ))}\n                    </ul>\n                    {question.expectInput && (\n                        <div>\n                            <br />\n                            <Input\n                                onChange={handleChange}\n                                placeholder=\"Enter value\"\n                                addonAfter={\n                                    <span onClick={submitInput}>Submit</span>\n                                }\n                            />\n                            <div>\n                                <br />\n                                {inputAnswer && <Text>{inputAnswer}</Text>}\n                            </div>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\nimport Choices from './Choices.component'\nimport Success from './Success.component'\nimport AddonTable from './AddonTable.component'\nimport Bullets from './Bullets.component'\nimport * as utils from './utilities'\n\nconst { Text, Title } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst QuestionText = styled(Text)`\n    font-size: 24px;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\n\nconst Main = styled.div`\n    display: flex;\n    height: calc(100vh - 100px);\n`\nexport const Question = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    border-right: 1px solid #e1dddd;\n    background: #f9f9f9;\n    display: flex;\n    align-content: center;\n    align-items: center;\n`\n\nexport const QuestionB = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    border-right: 1px solid #e1dddd;\n    background: #f9f9f9;\n    display: flex;\n    align-content: center;\n    align-items: center;\n    flex-direction: column;\n    justify-content: space-around;\n`\nexport const Options = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n`\nexport const NextButton = styled(Button)`\n    &&& {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n`\nexport const Image = styled.img`\n    width: 100%;\n    padding-bottom: 16px;\n`\n\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 16px;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    const { id, qID = null } = useParams()\n    const [currentQuestion, setCurrentQuestion] = React.useState(null)\n    const [isNextDisabled, setIsNextDisabled] = React.useState(true)\n    const allSelectedOptions = React.useRef([])\n    const selectedOption = React.useRef({})\n    const [currentSelectedIndex, setCurrentSelectedIndex] = React.useState(null)\n    const allQuestionsRef = React.useRef({})\n    const [addonTable, setAddonTable] = React.useState({})\n    const inputRef = React.useRef()\n    const [inputAnswer, setInputAnswer] = React.useState('')\n    const globalFlags = React.useRef({\n        revenue_path_flag: false,\n        cost_path_flag: false,\n        non_ticket_revenue_path_flag: false,\n        ticket_revenue_path_flag: false,\n    })\n    const [optionFeedback, setOptionFeedback] = React.useState(null)\n    const [maxScores, setMaxScore] = React.useState({})\n\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/questions-${id}.json`,\n                    {}\n                )\n                const resp = await res.json()\n                const json = utils.transformRes(resp)\n                setMaxScore(utils.getMaxScores(json, id))\n                allQuestionsRef.current = json\n                let initialQuestion = qID\n                if (!initialQuestion) {\n                    initialQuestion =\n                        id === '1'\n                            ? 'SlideDrugProblemStatement'\n                            : 'SlideAirlineProblemStatement' //'SlideAirlineQ1_0'\n                }\n                const currentQ = json[initialQuestion]\n                setCurrentQuestion(currentQ)\n\n                if (json[currentQ.addOnTable]) {\n                    setAddonTable(json[currentQ.addOnTable])\n                }\n                if (\n                    !currentQ.choices ||\n                    currentQ.choices.length === 0 ||\n                    currentQ.expectInput === false\n                ) {\n                    setIsNextDisabled(false)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [id, qID])\n\n    function handleBack(id) {\n        push(`/list`)\n    }\n    function onOptionChange(e) {\n        const option = currentQuestion.choices[e.target.value]\n        option.questionId = currentQuestion.questionId\n        option.optionIndex = e.target.value;\n        setCurrentSelectedIndex(e.target.value)\n        selectedOption.current = option\n        setIsNextDisabled(false)\n        if (currentQuestion.show_feedback) {\n            if (option.isCorrect) {\n                setOptionFeedback(currentQuestion.feedback_success)\n            } else {\n                setOptionFeedback(currentQuestion.feedback_failure)\n            }\n        }\n    }\n    function goNext() {\n        let nextQuestion = {}\n        if (!currentQuestion.choices || currentQuestion.choices.length === 0) {\n            nextQuestion =\n                allQuestionsRef.current[\n                    utils.getNextLink(currentQuestion, globalFlags)\n                ]\n        } else {\n            nextQuestion =\n                allQuestionsRef.current[\n                    utils.getNextLink(selectedOption.current, globalFlags)\n                ]\n\n        }\n      \n        if (nextQuestion === undefined) {\n            console.log('--------------------------------------------------')\n            console.log(currentQuestion)\n            console.log(\n                allQuestionsRef.current[\n                    utils.getNextLink(currentQuestion, globalFlags)\n                ]\n            )\n            console.log(selectedOption.current)\n            console.log('--------------------------------------------------')\n            return\n        }\n        setCurrentQuestion(nextQuestion)\n        if (selectedOption.current) {\n            allSelectedOptions.current.push(selectedOption.current)\n        }\n        if (nextQuestion.choices && nextQuestion.choices.length) {\n            setIsNextDisabled(true)\n        }\n        const tbl = allQuestionsRef.current[nextQuestion.addOnTable]\n        if (tbl) {\n            setAddonTable(tbl)\n            if (tbl.expectInput) {\n                setIsNextDisabled(true)\n            }\n        }\n        if (nextQuestion.expectInput) {\n            setIsNextDisabled(true)\n        }\n        utils.setFlags(nextQuestion, globalFlags)\n        setCurrentSelectedIndex(null)\n        setInputAnswer(null)\n        selectedOption.current = null\n        // if (tbl) {\n        //     selectedOption.current = tbl\n        // }\n        setOptionFeedback(null)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n\n    function handleChange(ev) {\n        const value = ev.target.value\n        inputRef.current = value\n    }\n    function submitInput() {\n        const value = Number(inputRef.current)\n        const hasTable = Object.keys(addonTable || {}).length > 0\n        if (hasTable) {\n            if (value === addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescription)\n            }\n            if (value > addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescriptionHigh)\n            }\n            if (value < addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescriptionLow)\n            }\n            setIsNextDisabled(false)\n            return\n        }\n        if (currentQuestion.bulletData) {\n            if (value === currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescription)\n            }\n            if (value > currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescriptionHigh)\n            }\n            if (value < currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescriptionLow)\n            }\n            setIsNextDisabled(false)\n            return\n        }\n    }\n\n    const groupedScore = utils.getGroupedScore(allSelectedOptions.current)\n    if (currentQuestion == null) {\n        return null\n    }\n    // console.log(JSON.stringify(allSelectedOptions.current))\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle={item.title} onBack={handleBack} />\n            </Header>\n            {currentQuestion.successMessage && (\n                <Success\n                    currentQuestion={currentQuestion}\n                    usersScore={groupedScore}\n                    maxScore={maxScores}\n                    caseDetails={item}\n                    selectedOptions={allSelectedOptions.current||{}}\n                    allQuestions = {allQuestionsRef.current}\n                />\n            )}\n            {!currentQuestion.successMessage && currentQuestion.intro && (\n                <div>\n                    <Body>\n                        <Title level={5}>\n                            {currentQuestion.question.headerText}\n                        </Title>\n                        <Text>{currentQuestion.question.titleText}</Text>\n                    </Body>\n                    <NextButton\n                        type=\"primary\"\n                        disabled={isNextDisabled}\n                        block\n                        onClick={goNext}\n                        size=\"large\"\n                    >\n                        Next\n                    </NextButton>\n                </div>\n            )}\n\n            {!currentQuestion.successMessage && !currentQuestion.intro && (\n                <>\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={currentQuestion.question}\n                            classNames=\"slide\"\n                            timeout={{ enter: 300, exit: 300 }}\n                        >\n                            <Main>\n                                {!currentQuestion.image && (\n                                    <Question>\n                                        <QuestionText>\n                                            {currentQuestion.question}\n                                        </QuestionText>\n                                    </Question>\n                                )}\n                                {currentQuestion.image && (\n                                    <QuestionB>\n                                        <QuestionText>\n                                            {currentQuestion.question}\n                                        </QuestionText>\n                                        <div>\n                                            <Image\n                                                src={currentQuestion.image}\n                                            />\n                                        </div>\n                                    </QuestionB>\n                                )}\n                                <Options>\n                                    {currentQuestion.addOnTable && (\n                                        <div>\n                                            <AddonTable\n                                                addonTable={addonTable}\n                                                inputAnswer={inputAnswer}\n                                                handleChange={handleChange}\n                                                submitInput={submitInput}\n                                            />\n                                        </div>\n                                    )}\n                                    {currentQuestion.bulletData && (\n                                        <div>\n                                            <Bullets\n                                                question={currentQuestion}\n                                                inputAnswer={inputAnswer}\n                                                handleChange={handleChange}\n                                                submitInput={submitInput}\n                                            />\n                                        </div>\n                                    )}\n                                    <Choices\n                                        questionId={currentQuestion.question}\n                                        onOptionChange={onOptionChange}\n                                        currentSelectedIndex={\n                                            currentSelectedIndex\n                                        }\n                                        choices={currentQuestion.choices}\n                                        optionFeedback={optionFeedback}\n                                    />\n                                </Options>\n                            </Main>\n                        </CSSTransition>\n                    </TransitionGroup>\n                    <NextButton\n                        type=\"primary\"\n                        disabled={isNextDisabled}\n                        block\n                        onClick={goNext}\n                        size=\"large\"\n                    >\n                        Next\n                    </NextButton>\n                </>\n            )}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader, Input } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport { staticData } from '../../Cases.fixtures'\nimport {useInterval} from '../../hooks/timers'\nconst { Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 16px;\n`\nconst Structure = styled.div`\n    margin-top: 16px;\n    display: flex;\n    padding: 16px 0px;\n    overflow: auto;\n    flex-wrap: wrap;\n`\nconst AddStructure = styled.div`\n    height: 32px;\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n`\nconst RootNodeContainer = styled.div``\nconst ChildNodeContainer = styled.div``\nconst RootNode = styled.div`\n    width: 300px;\n`\nconst ChildNode = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 8px;\n    position: relative;\n    width: 300px;\n`\nconst Box = styled.div`\n    height: 32px;\n    width: 32px;\n        &:before {\n            position: absolute;\n            height: 32px;\n            margin-left: 11px;\n            border-left: 1px solid #d9d9d9;\n            content: \" \";\n        }\n        &:after {\n            position: absolute;\n            width: 17px;\n            height: 16px;\n            margin-left: 11px;\n            border-bottom: 1px solid #d9d9d9;\n            content: \" \";\n    }\n    }\n`\nconst Tree = styled.div`\n    margin-right: 24px;\n    margin-bottom: 80px;\n`\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nconst defaultTree = [\n    {\n        id: 0,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n    {\n        id: 1,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n    {\n        id: 2,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n]\nconst defaultInput = [\n    {\n        id: 0,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n    {\n        id: 1,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n    {\n        id: 2,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n]\n\nexport default function CreateStructure() {\n    const { goBack, push } = useHistory()\n    const { id } = useParams()\n    const [treeData, setTreeData] = React.useState(defaultTree)\n    const inputRefs = React.useRef(defaultInput)\n    const timeElapsed = React.useRef(0);\n    useInterval(()=>{\n        timeElapsed.current += 500;\n    },500)\n\n    function handleClick(id) {\n        localStorage.setItem(\n            'structure',\n            JSON.stringify(inputRefs.current || {})\n        )\n        localStorage.setItem('structureTime',timeElapsed.current);\n        push(`/case/${item.id}`)\n    }\n    function handleNodeEnterPress(ev) {\n        console.log('called')\n        const rootId = ev.target.id.split('_')[1]\n        const child = {\n            id: treeData[rootId].children.length,\n        }\n        const child2 = {\n            id: treeData[rootId].children.length,\n        }\n        const newTreeData = [...treeData]\n        newTreeData[rootId].children.push(child)\n        setTreeData(newTreeData)\n        inputRefs.current[rootId].children.push(child2)\n        setTimeout(() => {\n            const lastTextBox = document.getElementById(\n                `root_${rootId}_child_${\n                    inputRefs.current[rootId].children.length - 1\n                }`\n            )\n            lastTextBox.focus()\n        }, 100)\n    }\n    function handleAddNewBucket() {\n        const child = {\n            id: treeData.length,\n            children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n        }\n        const child2 = {\n            id: treeData.length,\n            children: [\n                { id: 0, value: '' },\n                { id: 1, value: '' },\n                { id: 2, value: '' },\n            ],\n        }\n        const tree = [...treeData]\n        tree.push(child)\n        setTreeData(tree)\n        inputRefs.current.push(child2)\n        setTimeout(() => {\n            const lastTextBox = document.getElementById(\n                `root_${tree.length - 1}`\n            )\n            lastTextBox.focus()\n        }, 100)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n\n    function handleInputChange(ev) {\n        const { id, value } = ev.target\n        const [, rootId, , childId = null] = id.split('_')\n\n        if (!childId) {\n            inputRefs.current[rootId].value = value\n        } else {\n            inputRefs.current[rootId].children[childId].value = value\n        }\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Case\" onBack={goBack} />\n            </Header>\n            <Body>\n                <div\n                    dangerouslySetInnerHTML={createMarkup(\n                        item.detailedDescription\n                    )}\n                />\n            </Body>\n            <Structure>\n                {treeData.map((tree) => (\n                    <Tree key={tree.id}>\n                        <RootNodeContainer>\n                            <RootNode>\n                                <Input\n                                    placeholder={`Bucket ${tree.id + 1}`}\n                                    autoComplete=\"false\"\n                                    onPressEnter={handleNodeEnterPress}\n                                    id={`root_${tree.id}`}\n                                    onChange={handleInputChange}\n                                />\n                            </RootNode>\n                        </RootNodeContainer>\n                        <ChildNodeContainer>\n                            {tree.children.map((child) => (\n                                <ChildNode key={child.id}>\n                                    <Box />\n                                    <Input\n                                        placeholder=\"Sub topic\"\n                                        autoComplete=\"false\"\n                                        onPressEnter={handleNodeEnterPress}\n                                        id={`root_${tree.id}_child_${child.id}`}\n                                        onChange={handleInputChange}\n                                    />\n                                </ChildNode>\n                            ))}\n                        </ChildNodeContainer>\n                    </Tree>\n                ))}\n                <AddStructure onClick={handleAddNewBucket}>\n                    <PlusCircleOutlined /> &nbsp;&nbsp;\n                    <Text>Add a new bucket</Text>\n                </AddStructure>\n            </Structure>\n            <br />\n            <Button type=\"primary\" block onClick={handleClick}>\n                Submit\n            </Button>\n        </Wrapper>\n    )\n}\n","import React from 'react';\nexport function useInterval(callback, delay) {\n    const savedCallback = React.useRef();\n  \n    // Remember the latest callback.\n    React.useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    // Set up the interval.\n    React.useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        const id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n      return () => {};\n    }, [delay]);\n  }\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader  } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Text } = Typography\n\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid #f3f0f0;\n    padding: 16px;\n    min-height: 300px;\n`\nconst Questions = styled.div`\n    margin-top: 16px;\n    display: flex;\n    padding: 16px 0px;\n    overflow: auto;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`\nconst Question = styled.div`\n    display: flex;\n    padding: 16px;\n    align-items: center;\n    border: 1px solid #f3f0f0;\n    max-width: 47%;\n    width: 47%;\n    margin-bottom: 8px;\n    cursor: pointer;\n    &:hover {\n        background: #f3f0f0;\n        cursor: pointer;\n    }\n    background-color: ${(props) => (props.selected ? '#f3f0f0' : '')};\n`\nexport default function ClarifyingQuestions() {\n    const { goBack, push } = useHistory()\n    const { id } = useParams()\n    const item = staticData.find((e) => e.id.toString() === id)\n    const [questions, setQuestions] = React.useState([])\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null)\n    const list = React.useRef([])\n\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/case-${id}.json`,\n                    {}\n                )\n                const json = await res.json()\n                setQuestions(json)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [id])\n    \n    function handleClick(question) {\n        setSelectedQuestion(question)\n        list.current.push(question)\n        setQuestions((prevQuestions) =>\n            prevQuestions.map((item) => {\n                const ques = { ...item }\n                if (ques.id === question.id) {\n                    ques.selected = true\n                }\n                return ques\n            })\n        )\n    }\n    function handleCreate(){\n      localStorage.setItem(\n          'questions',\n          JSON.stringify(list.current || {})\n      )\n      push(`/create-structure/${item.id}`)\n    }\n    return (\n        <div>\n            <Header>\n                <PageHeader subTitle=\"Back to Case\" onBack={goBack} />\n            </Header>\n            <Body>\n                {selectedQuestion && (\n                    <div>\n                        {selectedQuestion.type === 'text' && (\n                            <Text>{selectedQuestion.text}</Text>\n                        )}\n                        {selectedQuestion.type === 'image' && (\n                            <img src={selectedQuestion.imageUrl} alt=\"img\" />\n                        )}\n                    </div>\n                )}\n            </Body>\n            <Questions>\n                {questions.map((question) => (\n                    <Question\n                        key={question.id}\n                        onClick={() => handleClick(question)}\n                        selected={question.selected}\n                    >\n                        <Text>{question.question}</Text>\n                    </Question>\n                ))}\n            </Questions>\n            <Button type=\"primary\" block onClick={handleCreate}>\n                Create Structure\n            </Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport HomePage from './HomePage/HomePage.jsx'\nimport ListPage from './ListPage/ListPage.jsx'\nimport DetailsPage from './DetailsPage/DetailsPage.jsx'\nimport CasePage from './CasePage/CasePage.jsx'\nimport CreateStructure from './CreateStructure/CreateStructure.jsx'\nimport ClearifyingQuestions from './ClearifyingQuestions/ClearifyingQuestions.jsx'\n\nexport default function Router() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\">\n                    <HomePage />\n                </Route>\n                <Route exact path=\"/list\">\n                    <ListPage />\n                </Route>\n                <Route exact path=\"/details/:id\">\n                    <DetailsPage />\n                </Route>\n                <Route exact path=\"/case/:id/:qID?\">\n                    <CasePage />\n                </Route>\n                <Route exact path=\"/create-structure/:id\">\n                    <CreateStructure />\n                </Route>\n                <Route exact path=\"/clearifying-questions/:id\">\n                    <ClearifyingQuestions />\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n","import React from 'react'\nimport Routes from './Routes'\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Routes />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}