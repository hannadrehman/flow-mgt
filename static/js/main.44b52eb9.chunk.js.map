{"version":3,"sources":["Routes/HomePage/HomePage.jsx","Cases.fixtures.js","Routes/ListPage/ListPage.jsx","Routes/HelpModal/HelpModal.component.jsx","Routes/DetailsPage/DetailsPage.jsx","Routes/CasePage/Choices.component.jsx","Routes/CasePage/utilities.js","Routes/CasePage/Score.component.jsx","Routes/CasePage/Structure.component.jsx","Routes/CasePage/Review.component.jsx","Routes/CasePage/Relevance.component.jsx","Routes/CasePage/Success.component.jsx","Routes/CasePage/AddonTable.component.jsx","Routes/CasePage/Bullets.component.jsx","Routes/CasePage/CasePage.jsx","Routes/CreateStructure/CreateStructure.jsx","hooks/timers.js","Routes/ClearifyingQuestions/ClearifyingQuestions.jsx","Routes/index.jsx","App.js","index.js"],"names":["Title","Typography","Wrapper","styled","div","HomePage","push","useHistory","level","onClick","type","staticData","id","title","description","detailedDescription","color","Text","Header","Grid","GridItem","GridImage","props","Container","subTitle","onBack","map","item","key","block","danger","detailsPage","clearifyingQuestionsPage","createStructurePage","successPage","HelpModal","html","React","useState","sessionStorage","getItem","show","setShow","handleClose","setItem","visible","onOk","onCancel","okText","cancelText","dangerouslySetInnerHTML","__html","Body","HeaderText","goBack","useParams","useEffect","localStorage","find","e","toString","style","fontSize","fontWeight","RadioButton","Radio","Button","RadioGroup","Group","RadioContainer","RadioBtn","OptionText","Choices","onOptionChange","currentSelectedIndex","choices","optionFeedback","length","onChange","defaultValue","value","index","answer","getNextLink","globalFlags","is_link_direct","conditionId","current","revenue_path_flag","cost_path_flag","non_ticket_revenue_path_flag","alert","links_to","transformRes","resp","json","Object","entries","forEach","questionId","scoreMap","choice","sum","score","reduce","acc","maxIndex","maxScore","k","v","correctAnswer","defaultFlags","ticket_revenue_path_flag","setFlags","question","flags","tracePath","allQuestions","scores","nextQuestion","selectedOption","options","option","typeScore","getCorrectType","table","addOnTable","expectInput","bulletData","successMessage","getMaxScores","questions","initialQuestion","rigor","judgment","structuring","synthesis","getPercent","total","achieved","Math","ceil","typesText","millisToMinutesAndSeconds","millis","minutes","floor","seconds","toFixed","ms","ss","Mains","Average","Bars","Bar","Heading","AvgCard","Card","LargeText","ChartWrapper","Charter","Score","usersScore","caseDetails","console","log","useMemo","temp","graph","max","data","subject","average","user","fullMark","marginTop","userScore","totalScore","utils","keys","toUpperCase","percent","strokeColor","percentage","status","cx","cy","outerRadius","width","height","dataKey","name","stroke","fill","fillOpacity","Response","ResponseBody","StructureInfo","Space","StructureMain","StructureChild","RecommendedHeading","Structure","answers","extraInfo","recommended","setRecommended","a","fetch","res","getData","structureData","JSON","parse","timeTaken","parseInt","children","child","info","Panel","Collapse","Solutions","Question","Accordion","HeadContent","Option","isCorrect","isWrong","Review","selectedOptions","focusQuestions","selectedMap","accum","isfocus","filter","selected","optionIndex","wrongAnswer","strong","expandIconPosition","expandIcon","isActive","header","explanation","Cards","CardInner","Label","LabelSuff","MainLabel","Relevance","items","relevent","irrelevent","relevant","Success","setSelected","ev","defaultSelectedKeys","mode","Item","Table","SubmitBtn","AddonTable","addonTable","inputAnswer","handleChange","submitInput","text","setText","tableData","tables","i","colSpan","rows","columns","row","col","label","target","isNaN","test","placeholder","addonAfter","Bullets","bullets","QuestionText","Main","QuestionB","Options","NextButton","Image","img","Intro","IntoText","qID","currentQuestion","setCurrentQuestion","isNextDisabled","setIsNextDisabled","allSelectedOptions","useRef","setCurrentSelectedIndex","allQuestionsRef","setAddonTable","inputRef","setInputAnswer","userInputCorrectAnswerRef","setOptionFeedback","maxScores","setMaxScore","goNext","undefined","tbl","currentQ","Number","messageDescription","messageDescriptionHigh","messageDescriptionLow","groupedScore","x","backIcon","onConfirm","ArrowLeftOutlined","extra","href","rel","intro","headerText","titleText","disabled","size","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","image","src","show_feedback","feedback_success","feedback_failure","AddStructure","RootNodeContainer","ChildNodeContainer","RootNode","ChildNode","Box","Tree","defaultTree","defaultInput","CreateStructure","treeData","setTreeData","inputRefs","timeElapsed","handleNodeEnterPress","rootId","split","child2","newTreeData","setTimeout","document","getElementById","focus","callback","delay","savedCallback","setInterval","clearInterval","useInterval","handleInputChange","childId","tree","autoComplete","onPressEnter","PlusCircleOutlined","stringify","Questions","ClarifyingQuestions","setQuestions","selectedQuestion","setSelectedQuestion","list","imageUrl","alt","prevQuestions","ques","handleClick","Router","exact","path","App","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.44b52eb9.chunk.js","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button } from 'antd'\nconst { Title } = Typography\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    flex-direction: column;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    function handleClick() {\n        push('list')\n    }\n    return (\n        <Wrapper>\n            <div>\n                <Title level={5}>\n                    Welcome to Caseadilla where we help you chew case interviews\n                    and land opportunities of your choice\n                </Title>\n            </div>\n            <div>\n                <Button onClick={handleClick} type=\"primary\">Start Chewing</Button>\n            </div>\n        </Wrapper>\n    )\n}\n","const staticData = [\n    {\n        id: 1,\n        title: 'Drug Case',\n        description:\n            'Help the Client (a drug manufacturer) to set a suitable price for their new drug',\n        detailedDescription:\n            'DRUG CASE OVERVIEW <br/> Today, we are going to discuss the case of a pharmaceutical company based in the U.S. The client has developed a new drug, PrevenT (Prevent Thrombosis), that helps reduce the rate at which a particular complication of hip-replacement surgery, deep-vein thrombosis (DVT), occurs. <br/>What you need to know is that DVT can lead to very serious medical conditions, including higher risk of pulmonary embolism (PE) or major bleeding. <br/>PrevenT will directly compete against Clearvenax, an established product that is also used to reduce rates of DVT and hence DVT-related complications. Clearvenax is sold at $4 per dose and has a variable production cost of $1 per dose. The client has asked you to help set a suitable price for PrevenT. <br/>',\n        color: '#ccf6c8',\n    },\n    {\n        id: 2,\n        title: 'Airline Case',\n        description:\n            'Help the client (a low cost carrier) to remain profitable despite a recent fuel price hike',\n        detailedDescription:\n            \" 'AIRLINE CASE OVERVIEW <br/> Today, we'll discuss the case of our client, a low-cost carrier (LCC) airline that is among the largest in Asia. After initial losses when it was established, a few years ago, it has finally become profitable. The company's profitability is now threatened, however, by a sharp increase in fuel prices, to the tune of more than 50 percent.<br/>       The client is therefore questioning its business model and looking to develop an immediate response to the situation that will ensure a return to profitability. Your task is also to help develop a strategy to ensure that the company remains profitable for the years to come.<br/>\",\n        color: '#fafcc2',\n    },\n]\nexport { staticData }\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n    margin-bottom:16px;\n`\nconst Grid = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 16px;\n    flex-wrap: wrap;\n    margin: -32px auto;\n    justify-content: center;\n`\nconst GridItem = styled.div`\n    max-width: 300px;\n    margin-top: 32px;\n    margin: 16px;\n`\n\nconst GridImage = styled.div`\n    width: 300px;\n    height: 300px;\n    background-color: ${(props) => props.color};\n`\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    align-content: center;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    function handleClick(id) {\n        push(`/details/${id}`)\n    }\n    function goHome(id) {\n        push(`/`)\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Home\" onBack={goHome} />\n            </Header>\n\n            <Grid>\n                {staticData.map((item) => (\n                    <GridItem key={item.id}>\n                        <GridImage color={item.color} />\n                        <Container>\n                            <Title level={5}>{item.title}</Title>\n                        </Container>\n                        <Container>\n                            <Text>{item.description}</Text>\n                        </Container>\n                        <Container>\n                            <Button\n                                block\n                                danger\n                                onClick={() => handleClick(item.id)}\n                            >\n                                Try {item.title}\n                            </Button>\n                        </Container>\n                    </GridItem>\n                ))}\n            </Grid>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { Modal } from 'antd'\n\nconst map = {\n    detailsPage: `Once you have read the case problem in detail, you will see two options. You can choose either of them.\n    <br />\n    <b>Ask Clarifying Questions:</b> here you can view a list of questions you might want to clear before defining your approach to solve the case \n    <br />\n    <b>Create Structure:</b> on clicking this, you will be directly given a  blank template where you can fill in your planned structure \n    `,\n    clearifyingQuestionsPage: `On this page, you can choose to select any of the displayed questions to gain further clarity.\n    <br />\n    <b>Pro tip:</b> Be conscious to choose the right questions that will help in creating your approach/structure to solve the problem. Interviewers generally judge you on the questions you ask. \n    `,\n    createStructurePage: `You can now go ahead and structure your thoughts in the tree below. Remember to think through various aspects you may want to consider. \n    <br />\n    <b>Pro Tip:</b> Ensure that you take between 1 and 2 mins maximum for this exercise. Any more and you might disengage the interviewer. \n    `,\n    successPage: `Congrats on completing the case. Here you can review various aspects of your performance: \n    <br />\n    <b>A) Score:</b> Review your overall performance across various parameters and compare how you fare against your peers \n    <br />\n    <b>B)</b> Structure: Compare your crafted structure to our recommended structure trees and other options \n    <br />\n    <b>C) Review:</b> Analyze questions where we think you could have chosen a strategically better answer \n    <br />\n    <b>D) Relevance:</b> Undertand the relevance of each question you asked and reasoning behind it \n    `,\n}\n\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nexport default function HelpModal({ type }) {\n    const [show, setShow] = React.useState(\n        !!sessionStorage.getItem(`modal_${type}`) ? false : true\n    )\n    function handleClose() {\n        setShow(false)\n        sessionStorage.setItem(`modal_${type}`, true)\n    }\n    return (\n        <Modal\n            title=\"Introduction\"\n            visible={show}\n            onOk={handleClose}\n            onCancel={handleClose}\n            okText=\"Got it!\"\n            cancelText=\"Skip\"\n        >\n            <div dangerouslySetInnerHTML={createMarkup(map[type])}></div>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\nimport HelpModal from '../HelpModal/HelpModal.component';\n\nconst { Title } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    align-content: center;\n`\n\nexport const Body = styled.div`\n    margin-top: 48px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid green;\n    border-radius: 80px;\n    padding: 48px;\n`\nconst HeaderText = styled(Title)`\n    &&& {\n        color: green;\n    }\n`\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nexport default function HomePage() {\n    const { push, goBack } = useHistory()\n    const { id } = useParams()\n    \n    React.useEffect(() => {\n        localStorage.setItem('questions', '')\n        localStorage.setItem('structure', '')\n    }, [])\n\n    function handleStructureClick(id) {\n        push(`/create-structure/${item.id}`)\n    }\n    function handleClearifyingQuestionsClick(id) {\n        push(`/clearifying-questions/${item.id}`)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Case Library\" onBack={goBack} />\n            </Header>\n            <Body>\n                <HeaderText level={1} color=\"green\">\n                    {item.title}\n                </HeaderText>\n                <div\n                    style={{ fontSize: '20px', fontWeight: 500 }}\n                    dangerouslySetInnerHTML={createMarkup(\n                        item.detailedDescription\n                    )}\n                />\n            </Body>\n            <br />\n            <Container>\n                <Button\n                    type=\"primary\"\n                    block\n                    onClick={handleClearifyingQuestionsClick}\n                >\n                    Ask Clarifying questions\n                </Button>\n                &nbsp;&nbsp;\n                <Button type=\"primary\" block onClick={handleStructureClick}>\n                    Create Structure\n                </Button>\n            </Container>\n        <HelpModal type=\"detailsPage\" />\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Radio, Typography } from 'antd'\n\nconst RadioButton = Radio.Button\nconst RadioGroup = Radio.Group\nconst { Text } = Typography\n\nexport const RadioContainer = styled(RadioGroup)`\n    &&& {\n        width: 100%;\n    }\n`\nexport const RadioBtn = styled(RadioButton)`\n    display: block;\n    margin-bottom: 8px;\n    width: 100%;\n    height: auto;\n    line-height: 1.5;\n    padding: 8px;\n    box-shadow: 0px 3px 6px #edf0f2;\n    border: none;\n    transition: all 100ms ease-in-out;\n    min-height: 50px;\n    display: flex;\n    align-items: center;\n    &:hover {\n        box-shadow: 0px 3px 6px #dbd8d8;\n    }\n`\nconst OptionText = styled(Text)`\n    font-size: 16px;\n`\n\nexport default function Choices({\n    onOptionChange,\n    currentSelectedIndex,\n    choices,\n    optionFeedback,\n}) {\n    if (!choices || choices.length === 0) {\n        return null\n    }\n    return (\n        <>\n            <RadioContainer\n                onChange={onOptionChange}\n                defaultValue=\"a\"\n                value={currentSelectedIndex}\n            >\n                {choices.map((item, index) => (\n                    <RadioBtn key={index} value={index}>\n                        <OptionText>{item.answer}</OptionText>\n                    </RadioBtn>\n                ))}\n            </RadioContainer>\n            <Text>{optionFeedback}</Text>\n        </>\n    )\n}\n","export function getGroupedScore(list) {\n    return list\n        .filter((x) => x.score)\n        .map((x) => x.score)\n        .reduce(\n            (accum, item) => {\n                accum.judgment = accum.judgment + item.judgment\n                accum.rigor = accum.rigor + item.rigor\n                accum.structuring = accum.structuring + item.structuring\n                accum.synthesis = accum.synthesis + item.synthesis\n                return accum\n            },\n            { judgment: 0, rigor: 0, structuring: 0, synthesis: 0 }\n        )\n}\n\nexport function getNextLink(item, globalFlags) {\n    if (item.is_link_direct === false) {\n        const qid = item.conditionId\n        switch (qid) {\n            case 1:\n                if (globalFlags.current.revenue_path_flag) {\n                    return 'SlideAirlineQ3_121_6_0'\n                } else {\n                    return 'SlideAirlineQ3_121_2_0'\n                }\n            case 2:\n                if (globalFlags.current.cost_path_flag === false) {\n                    return 'SlideAirlineQ4_59_3_0'\n                } else {\n                    return 'SlideAirlineQ4_59_6_0'\n                }\n\n            case 3:\n                if (globalFlags.current.non_ticket_revenue_path_flag) {\n                    if (globalFlags.current.cost_path_flag === false) {\n                        return 'SlideAirlineQ4_59_3_0'\n                    } else {\n                        return 'SlideAirlineQ4_59_6_0'\n                    }\n                } else {\n                    if (globalFlags.current.cost_path_flag === false) {\n                        return 'SlideAirlineQ4_59_5_0b'\n                    } else {\n                        return 'SlideAirlineQ4_59_5_0c'\n                    }\n                }\n            default:\n                alert('mismatch')\n                return\n        }\n    }\n    return item.links_to\n}\n\nexport function transformRes(resp) {\n    const json = { ...resp }\n    Object.entries(json).forEach(([key, value]) => {\n        value.questionId = key;\n        if (value.choices && value.choices.length) {\n            const scoreMap = {}\n            value.choices.forEach((choice, index) => {\n                const sum = Object.entries(choice.score)\n                    .map(([k, v]) => v)\n                    .reduce((acc, item) => (acc += item), 0)\n                scoreMap[index] = sum\n            })\n            let maxIndex = null\n            let maxScore = -100\n            Object.entries(scoreMap).forEach(([k, v]) => {\n                if (v > maxScore) {\n                    maxScore = v\n                    maxIndex = k\n                }\n            })\n            // console.log('q: ',key,'correct index : ',maxIndex, 'correct score: ', value.choices[maxIndex].score)\n            value.choices[maxIndex].correctAnswer = true\n        }\n    })\n    return json\n}\n\nconst defaultFlags = {\n    current: {\n        revenue_path_flag: false,\n        cost_path_flag: false,\n        non_ticket_revenue_path_flag: false,\n        ticket_revenue_path_flag: false,\n    },\n}\n\nlet globalFlags = defaultFlags\n\nexport function setFlags(question, flags) {\n    if (question.revenue_path_flag || question.revenue_path_flag === false) {\n        flags.current.revenue_path_flag = question.revenue_path_flag\n    }\n    if (question.cost_path_flag || question.cost_path_flag === false) {\n        flags.current.cost_path_flag = question.cost_path_flag\n    }\n    if (\n        question.non_ticket_revenue_path_flag ||\n        question.non_ticket_revenue_path_flag === false\n    ) {\n        flags.current.non_ticket_revenue_path_flag =\n            question.non_ticket_revenue_path_flag\n    }\n    if (\n        question.ticket_revenue_path_flag ||\n        question.ticket_revenue_path_flag === false\n    ) {\n        flags.current.ticket_revenue_path_flag =\n            question.ticket_revenue_path_flag\n    }\n}\n\nfunction getCorrectType(options, type) {\n    let maxIndex = 0\n    let maxScore = -100\n    options.forEach((option, index) => {\n        const typeScore = option.score[type] || 0\n        if (typeScore > maxScore) {\n            maxScore = typeScore\n            maxIndex = index\n        }\n    })\n    return options[maxIndex]\n}\n\nfunction tracePath(question, allQuestions, scores, type) {\n    let nextQuestion = null\n    if (!question.choices) {\n        const table = allQuestions[question.addOnTable]\n        if(table && table.expectInput){\n            scores[type] += table.score[type]\n        }\n        if(question.bulletData && question.expectInput){\n            scores[type] += question.score[type]\n        }\n        nextQuestion = allQuestions[getNextLink(question, globalFlags)]\n    } else {\n        const selectedOption = getCorrectType(question.choices, type)\n        nextQuestion = allQuestions[getNextLink(selectedOption, globalFlags)]\n        scores[type] += selectedOption.score[type]\n    }\n    setFlags(nextQuestion, globalFlags)\n    if (!nextQuestion.successMessage) {\n        tracePath(nextQuestion, allQuestions, scores, type)\n    }\n}\n\nexport function getMaxScores(questions, id) {\n    let initialQuestion = null\n    initialQuestion =\n        id === '1'\n            ? 'SlideDrugProblemStatement'\n            : 'SlideAirlineProblemStatement'\n\n    globalFlags = defaultFlags\n    const scores = { rigor: 0, judgment: 0, structuring: 0, synthesis: 0 }\n    tracePath(questions[initialQuestion], questions, scores, 'rigor')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'judgment')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'structuring')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'synthesis')\n    return scores\n}\n\nexport function getPercent(total, achieved) {\n    return Math.ceil((achieved / total) * 100)\n}\n\nexport function getColor(percentage) {\n    if (percentage > 70) {\n        return '#4caf50'\n    }\n    if (percentage > 30) {\n        return '#ffc107'\n    }\n    return '#f44336'\n}\n\nconst typesText = {\n    judgment: 'indicating your intuition in making choices',\n    rigor: 'indicating your quantitative decision making',\n    structuring: 'indicating your organization of thoughts/idea',\n    synthesis: 'ability to convey more in less',\n}\nexport function getTypeText(type) {\n    return typesText[type]\n}\n\nexport function getWeightedScore(userScore, totalScore) {\n    // ((100*user_rigor_score)/max_rigor_calculated_value) *assigned_weight\n    const judgment = ((100 * userScore.judgment) / totalScore.judgment) * 0.25\n    const rigor = ((100 * userScore.rigor) / totalScore.rigor) * 0.25\n    const structuring =\n        ((100 * userScore.structuring) / totalScore.structuring) * 0.25\n    const synthesis =\n        ((100 * userScore.synthesis) / totalScore.synthesis) * 0.25\n    return Math.ceil(judgment + rigor + structuring + synthesis);    \n}\n\n\nexport function millisToMinutesAndSeconds(millis) {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    const ms = minutes>1 ?'minutes': 'minute';\n    const ss = seconds > 1 ? 'seconds': 'second'\n    return `${minutes} ${ms}, ${seconds} ${ss}`;\n  }\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as utils from './utilities'\nimport { Typography, Progress, Card, Tooltip } from 'antd'\nimport {\n    Radar,\n    RadarChart,\n    PolarGrid,\n    Legend,\n    PolarAngleAxis,\n    PolarRadiusAxis,\n} from 'recharts'\n\nconst { Text, Title } = Typography\n\nconst Wrapper = styled.div``\nconst Mains = styled.div`\n    display: flex;\n`\nconst Average = styled.div`\n    padding: 8px;\n`\nconst Bars = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n`\nconst Bar = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    min-height: 120px;\n    justify-content: space-evenly;\n    &:nth-child(2n + 2) {\n        padding-left: 28px;\n    }\n    &:nth-child(n + 3) {\n        margin-top: 40px;\n    }\n`\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\nconst AvgCard = styled(Card)`\n    width: 200px;\n    height: 100%;\n    margin-right: 16px;\n    .ant-card-body {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        padding: 0;\n        height: 200px;\n    }\n`\nconst LargeText = styled.div`\n    font-size: 48px;\n    font-weight: bold;\n`\nconst ChartWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`\nconst Charter = styled.div``\n\nexport default function Score({ usersScore, maxScore, caseDetails }) {\n    console.log('User score: ', usersScore)\n    console.log('Max score: ', maxScore)\n    const scores = React.useMemo(() => {\n        const temp = {}\n        Object.entries(usersScore).forEach(([k, v]) => {\n            temp[k] = maxScore[k] >= v ? v : maxScore[k] - (v - maxScore[k])\n        })\n        return temp\n    }, [usersScore, maxScore])\n    console.log('Adjusted score: ', scores)\n\n    const graph = React.useMemo(() => {\n        let max = -100\n        Object.entries(maxScore).forEach(([, v]) => {\n            if (v > max) {\n                max = v\n            }\n        })\n        const data = [\n            {\n                subject: 'Judgment',\n                average: (maxScore.judgment * 65) / 100,\n                user: scores.judgment,\n                fullMark: maxScore.judgment,\n            },\n            {\n                subject: 'Rigor',\n                average: (maxScore.rigor * 70) / 100,\n                user: scores.rigor,\n                fullMark: maxScore.rigor,\n            },\n            {\n                subject: 'Structuring',\n                average: (maxScore.structuring * 70) / 100,\n                user: scores.structuring,\n                fullMark: maxScore.structuring,\n            },\n            {\n                subject: 'Synthesis',\n                average: (maxScore.synthesis * 78) / 100,\n                user: scores.synthesis,\n                fullMark: maxScore.synthesis,\n            },\n        ]\n        return { data, max }\n    }, [maxScore, scores])\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared`}\n                </Title>\n                <Title level={3} style={{ marginTop: -10 }}>\n                    Score\n                </Title>\n            </Heading>\n            <Mains>\n                <Average>\n                    <AvgCard title=\"Weighted average\">\n                        <LargeText>\n                            {utils.getWeightedScore(scores, maxScore)}%\n                        </LargeText>\n                    </AvgCard>\n                </Average>\n                <Bars>\n                    {Object.keys(maxScore).map((item) => (\n                        <Bar key={item}>\n                            <Text>\n                                <b>{`${item.toUpperCase()} : `}</b>{' '}\n                                {utils.getTypeText(item)}\n                            </Text>\n                            <Tooltip\n                                title={`${scores[item]} out of ${maxScore[item]}`}\n                            >\n                                <Progress\n                                    percent={utils.getPercent(\n                                        maxScore[item],\n                                        scores[item]\n                                    )}\n                                    strokeColor={utils.getColor(\n                                        utils.getPercent(\n                                            maxScore[item],\n                                            scores[item]\n                                        )\n                                    )}\n                                    status=\"active\"\n                                />\n                            </Tooltip>\n                        </Bar>\n                    ))}\n                </Bars>\n            </Mains>\n            <ChartWrapper>\n                <Charter>\n                    <RadarChart\n                        cx={300}\n                        cy={250}\n                        outerRadius={150}\n                        width={500}\n                        height={500}\n                        data={graph.data}\n                    >\n                        <PolarGrid />\n                        <PolarAngleAxis dataKey=\"subject\" />\n                        {/* <PolarRadiusAxis /> */}\n                        <Radar\n                            name=\"You\"\n                            dataKey=\"user\"\n                            stroke=\"#8884d8\"\n                            fill=\"#8884d8\"\n                            fillOpacity={0.6}\n                        />\n                        <Radar\n                            name=\"Average\"\n                            dataKey=\"average\"\n                            stroke=\"#82ca9d\"\n                            fill=\"#82ca9d\"\n                            fillOpacity={0.6}\n                        />\n                        <Legend />\n                    </RadarChart>\n                </Charter>\n            </ChartWrapper>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography } from 'antd'\nimport * as utils from './utilities'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div``\nconst Mains = styled.div`\n    display: flex;\n`\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\n\nconst Response = styled.div`\n    border: 1px solid #e6e6e6;\n    width: 100%;\n`\nconst Header = styled.div`\n    color: white;\n    background-color: ${(props) => props.color || '#1890ff'};\n    padding: 16px;\n    display: flex;\n    justify-content: space-between;\n`\nconst HeaderText = styled(Text)`\n    color: white;\n    font-weight: 600;\n`\nconst ResponseBody = styled.div`\n    padding: 16px;\n`\nconst StructureInfo = styled.div`\n    display: flex;\n    padding: 16px 0px;\n    border-bottom: 1px solid #e6e6e6;\n    border-top: 1px solid #e6e6e6;\n`\nconst Space = styled.div`\n    margin-top: 16px;\n`\nconst StructureMain = styled.div`\n    max-width: 50%;\n    width: 50%;\n`\nconst StructureChild = styled.div`\n    min-height: 48px;\n`\nconst RecommendedHeading = styled.div`\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n`\n\nexport default function Structure({ caseDetails }) {\n    const [recommended, setRecommended] = React.useState({\n        answers: [],\n        extraInfo: [],\n    })\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/success-structure.json`,\n                    {}\n                )\n                const resp = await res.json()\n                setRecommended(resp)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [])\n\n    const structureData = JSON.parse(localStorage.getItem('structure'))\n    const timeTaken = parseInt(localStorage.getItem('structureTime'), 10)\n\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared`}\n                </Title>\n                <Title level={3} style={{ marginTop: -10 }}>\n                    Structure\n                </Title>\n            </Heading>\n            <Mains>\n                <Response>\n                    <Header>\n                        <HeaderText>Your response</HeaderText>\n                        <HeaderText>\n                            {`Time Taken:  ${utils.millisToMinutesAndSeconds(\n                                timeTaken\n                            )}. Avg time : ${utils.millisToMinutesAndSeconds(\n                                2000000\n                            )}`}\n                        </HeaderText>\n                    </Header>\n                    <ResponseBody>\n                        <Text>\n                            Problem statement: {caseDetails.description}\n                        </Text>\n                        <Space />\n                        {structureData.map((item) => (\n                            <StructureInfo key={item.id}>\n                                <StructureMain>\n                                    <Text>{item.value}</Text>\n                                </StructureMain>\n                                <StructureChild>\n                                    <ul>\n                                        {item.children.map((child) => (\n                                            <li key={child.id}>\n                                                {child.value}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </StructureChild>\n                            </StructureInfo>\n                        ))}\n                    </ResponseBody>\n                </Response>\n            </Mains>\n            <br />\n            <Mains>\n                <Response>\n                    <Header color=\"#305D7B\">\n                        <HeaderText>RocketBlocks suggested answer</HeaderText>\n                    </Header>\n                    <ResponseBody>\n                        <Text>\n                            Problem statement: {caseDetails.description}\n                        </Text>\n                        <Space />\n                        {recommended.answers.map((item) => (\n                            <StructureInfo key={item.id}>\n                                <StructureMain>\n                                    <Text>{item.value}</Text>\n                                </StructureMain>\n                                <StructureChild>\n                                    <ul>\n                                        {item.children.map((child) => (\n                                            <li key={child.id}>\n                                                {child.value}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </StructureChild>\n                            </StructureInfo>\n                        ))}\n                        {recommended.extraInfo.map((info) => (\n                            <div key={info.id}>\n                                <RecommendedHeading>\n                                    <Text>\n                                        <b>{info.title}</b>\n                                    </Text>\n                                </RecommendedHeading>\n                                <div>\n                                    <ul>\n                                        {info.children.map((child) => (\n                                            <li key={child.id}>\n                                                {child.value}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        ))}\n                    </ResponseBody>\n                </Response>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Collapse } from 'antd'\nconst { Title, Text } = Typography\nconst { Panel } = Collapse\n\nconst Wrapper = styled.div``\nconst Mains = styled.div``\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\nconst Solutions = styled.div``\nconst Question = styled(Panel)`\n    &&& {\n        padding: 12px 0px;\n        background: white;\n        margin-bottom: 16px;\n    }\n`\nconst Accordion = styled(Collapse)`\n    &&& {\n        background: white;\n    }\n`\nconst HeadContent = styled.div`\n    max-width: 90%;\n`\n\nconst Option = styled.div`\n    padding: 8px;\n    border: 1px solid #d0cccc;\n    border-radius: 8px;\n    margin-bottom: 16px;\n    min-height: 61px;\n    display: flex;\n    align-items: center;\n    ${(props) =>\n        props.isCorrect\n            ? 'background-color:#17b978;color:white;border:none;'\n            : ''}\n    ${(props) =>\n        props.isWrong\n            ? 'background-color:#f85959;color:white;border:none;'\n            : ''}\n`\n\nexport default function Review({ selectedOptions, allQuestions, caseDetails }) {\n    const focusQuestions = React.useMemo(() => {\n        const selectedMap = selectedOptions.reduce((accum, item) => {\n            accum[item.questionId] = item\n            return accum\n        }, {})\n        return Object.entries(allQuestions)\n            .map(([k, v]) => (v.isfocus ? v : null))\n            .filter((item) => {\n                if (!item) {\n                    return false\n                }\n                const selected = selectedMap[item.questionId]\n                if (selected && selected.correctAnswer) {\n                    return false\n                }\n                return true\n            })\n            .map((item) => {\n                const selected = selectedMap[item.questionId]\n                if (selected && !selected.correctAnswer) {\n                    item.choices[selected.optionIndex].wrongAnswer = true\n                }\n                return item\n            })\n    }, [allQuestions, selectedOptions])\n\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared`}\n                </Title>\n                <Title level={3} style={{ marginTop: -10 }}>\n                    Review\n                </Title>\n            </Heading>\n            <Mains>\n                <Solutions>\n                    <Text strong>\n                        These are some questions where you could have chosen\n                        different answers\n                    </Text>\n                    <br />\n                    <br />\n                    <Accordion\n                        expandIconPosition=\"right\"\n                        expandIcon={({ isActive }) => {\n                            return (\n                                <Text strong>\n                                    {isActive\n                                        ? 'Hide Solution'\n                                        : 'View Solution'}\n                                </Text>\n                            )\n                        }}\n                    >\n                        {focusQuestions.map((question) => (\n                            <Question\n                                header={\n                                    <HeadContent>\n                                        {question.question}\n                                    </HeadContent>\n                                }\n                                key={question.questionId}\n                            >\n                                <div>\n                                    {question.choices.map((item, index) => (\n                                        <Option\n                                            key={index}\n                                            isCorrect={\n                                                item.correctAnswer === true\n                                            }\n                                            isWrong={item.wrongAnswer === true}\n                                        >\n                                            {item.answer}\n                                        </Option>\n                                    ))}\n                                </div>\n                                <Text>{question.explanation}</Text>\n                            </Question>\n                        ))}\n                    </Accordion>\n                </Solutions>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Card, Collapse } from 'antd'\nconst { Title, Text } = Typography\nconst { Panel } = Collapse\nconst Wrapper = styled.div``\nconst Mains = styled.div``\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\nconst Cards = styled.div`\n    display: flex;\n`\nconst CardInner = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst Label = styled(Text)`\n    font-size: 12px;\n    color: gray;\n`\nconst LabelSuff = styled(Text)`\n    font-size: 10px;\n    color: gray;\n`\nconst MainLabel = styled(Text)`\n    font-size: 20px;\n    font-weight: 600;\n    color: ${(props) => props.color};\n`\n\nconst Solutions = styled.div`\n    margin-top: 48px;\n`\nconst Question = styled(Panel)`\n    &&& {\n        padding: 12px 0px;\n        background: white;\n        margin-bottom: 16px;\n    }\n`\nconst Accordion = styled(Collapse)`\n    &&& {\n        background: white;\n    }\n`\n\nexport default function Relevance({ usersScore, maxScore, caseDetails }) {\n    const questions = React.useMemo(() => {\n        const items = JSON.parse(localStorage.getItem('questions'))\n        const map = {\n            relevent: [],\n            irrelevent: [],\n        }\n        items.forEach((item) => {\n            if (item.relevant === true) {\n                map.relevent.push(item)\n                return\n            }\n            if (item.relevant === false) {\n                map.irrelevent.push(item)\n                return\n            }\n        })\n        return map\n    }, [])\n\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared`}\n                </Title>\n                <Title level={3} style={{ marginTop: -10 }}>\n                    Relevance\n                </Title>\n            </Heading>\n            <Mains>\n                <Cards>\n                    <Card>\n                        <CardInner>\n                            <Label>YOU ASKED</Label>\n                            <MainLabel color=\"green\">\n                                {questions.relevent.length}\n                            </MainLabel>\n                            <LabelSuff>RELEVENT QUESTIONS</LabelSuff>\n                        </CardInner>\n                    </Card>\n                    &nbsp;&nbsp;&nbsp;\n                    <Card>\n                        <CardInner>\n                            <Label>YOU ASKED</Label>\n                            <MainLabel color=\"red\">\n                                {questions.irrelevent.length}\n                            </MainLabel>\n                            <LabelSuff>IRRELEVENT QUESTIONS</LabelSuff>\n                        </CardInner>\n                    </Card>\n                </Cards>\n                <Solutions>\n                    <Text strong>\n                        These are some questions which we think you could have\n                        avoided\n                    </Text>\n                    <br />\n                    <br />\n                    <Accordion\n                        expandIconPosition=\"right\"\n                        expandIcon={({ isActive }) => {\n                            return (\n                                <Text strong>\n                                    {isActive\n                                        ? 'Hide Solution'\n                                        : 'View Solution'}\n                                </Text>\n                            )\n                        }}\n                    >\n                        {questions.irrelevent.map((question) => (\n                            <Question\n                                header={question.question}\n                                key={question.id}\n                            >\n                                <Text>{question.explanation}</Text>\n                            </Question>\n                        ))}\n                    </Accordion>\n                </Solutions>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Score from './Score.component'\nimport Structure from './Structure.component'\nimport Review from './Review.component'\nimport Relevance from './Relevance.component'\nimport HelpModal from '../HelpModal/HelpModal.component';\n\nimport {  Menu } from 'antd'\n\nconst Wrapper = styled.div`\n    display: flex;\n`\nexport const Mains = styled.div`\n    padding-left: 16px;\n    padding-top: 16px;\n`\n\nexport default function Success({ usersScore, maxScore, caseDetails, selectedOptions, allQuestions }) {\n    const [selected, setSelected] = React.useState('1')\n   \n    return (\n        <Wrapper>\n            <div>\n                <Menu\n                    onClick={(ev)=>setSelected(ev.key)}\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['1']}\n                    mode=\"inline\"\n                >\n                    <Menu.Item key=\"1\">Score</Menu.Item>\n                    <Menu.Item key=\"2\">Structure</Menu.Item>\n                    <Menu.Item key=\"3\">Review</Menu.Item>\n                    <Menu.Item key=\"4\">Relevance</Menu.Item>\n                </Menu>\n            </div>\n            <Mains>\n                {selected === '1' && (\n                    <Score usersScore={usersScore} maxScore={maxScore} caseDetails={caseDetails} />\n                )}\n                {selected === '2' && (\n                    <Structure caseDetails={caseDetails} />\n                )}\n                {selected === '3' && (\n                    <Review caseDetails={caseDetails} selectedOptions={selectedOptions} allQuestions={allQuestions} />\n                )}\n                {selected === '4' && (\n                    <Relevance caseDetails={caseDetails} />\n                )}\n            </Mains>\n        <HelpModal type=\"successPage\" />\n\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Input } from 'antd'\nconst { Title, Text } = Typography\n\nexport const Table = styled.table`\n    width: 100%;\n    margin-top: 16px;\n    border: 1px solid #d7cdcd;\n    td,\n    th {\n        padding: 4px;\n        border-right: 1px solid #d7cdcd;\n    }\n    tr {\n        border-bottom: 1px solid #d7cdcd;\n    }\n`\nconst SubmitBtn = styled.div`\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport default function AddonTable({\n    addonTable,\n    inputAnswer,\n    handleChange,\n    submitInput,\n}) {\n    const [text, setText] = React.useState('')\n    function handleTextChanges(e) {\n        const { value } = e.target\n        const reg = /^-?\\d*(\\.\\d*)?$/\n        if (\n            (!isNaN(value) && reg.test(value)) ||\n            value === '' ||\n            value === '-'\n        ) {\n            setText(value)\n            handleChange({ target: { value } })\n            return\n        }\n        setText('')\n    }\n    return (\n        <div>\n            {Object.keys(addonTable).length > 0 && (\n                <div>\n                    <Title level={5}>{addonTable.question}</Title>\n                    {addonTable.tableData.tables.map((table, i) => (\n                        <Table key={i}>\n                            <thead>\n                                {table.title && (\n                                    <tr>\n                                        <th colSpan={table.rows[0].columns.length}>{table.title}</th>\n                                    </tr>\n                                )}\n                            </thead>\n                            <tbody>\n                                {table.rows.map((row, id) => (\n                                    <tr key={id}>\n                                        {row.columns.map((col, id) => (\n                                            <td key={id}>{col.label}</td>\n                                        ))}\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    ))}\n                    {addonTable.expectInput && (\n                        <div>\n                            <br />\n                            <Input\n                                onChange={handleTextChanges}\n                                placeholder=\"Enter value\"\n                                value={text}\n                                addonAfter={\n                                    <SubmitBtn onClick={submitInput}>\n                                        Submit\n                                    </SubmitBtn>\n                                }\n                            />\n                            <div>\n                                <br />\n                                {inputAnswer && <Text>{inputAnswer}</Text>}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Input } from 'antd'\nconst { Text } = Typography\n\nconst SubmitBtn = styled.div`\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport default function Bullets({\n    question,\n    inputAnswer,\n    handleChange,\n    submitInput,\n}) {\n    const [text, setText] = React.useState('')\n    function handleTextChanges(e) {\n        const { value } = e.target\n        const reg = /^-?\\d*(\\.\\d*)?$/\n        if (\n            (!isNaN(value) && reg.test(value)) ||\n            value === '' ||\n            value === '-'\n        ) {\n            setText(value)\n            handleChange({ target: { value } })\n            return\n        }\n        setText('')\n    }\n    return (\n        <div>\n            {Object.keys(question).length && (\n                <>\n                    <Text>{question.bulletData.title}</Text>\n                    <ul>\n                        {question.bulletData.bullets.map((e, i) => (\n                            <li key={i}>{e}</li>\n                        ))}\n                    </ul>\n                    {question.expectInput && (\n                        <div>\n                            <br />\n                            <Input\n                                onChange={handleTextChanges}\n                                placeholder=\"Enter value\"\n                                value={text}\n                                addonAfter={\n                                    <SubmitBtn onClick={submitInput}>\n                                        Submit\n                                    </SubmitBtn>\n                                }\n                            />\n                            <div>\n                                <br />\n                                {inputAnswer && <Text>{inputAnswer}</Text>}\n                            </div>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ArrowLeftOutlined } from '@ant-design/icons'\nimport { Typography, Button, PageHeader, Popconfirm } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\nimport Choices from './Choices.component'\nimport Success from './Success.component'\nimport AddonTable from './AddonTable.component'\nimport Bullets from './Bullets.component'\nimport * as utils from './utilities'\nimport HelpModal from '../HelpModal/HelpModal.component'\n\nconst { Text, Title } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst QuestionText = styled(Text)`\n    font-size: 24px;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\n\nconst Main = styled.div`\n    display: flex;\n    height: calc(100vh - 100px);\n`\nexport const Question = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    border-right: 1px solid #e1dddd;\n    background: #f9f9f9;\n    display: flex;\n    align-content: center;\n    align-items: center;\n`\n\nexport const QuestionB = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    border-right: 1px solid #e1dddd;\n    background: #f9f9f9;\n    display: flex;\n    align-content: center;\n    align-items: center;\n    flex-direction: column;\n    justify-content: space-around;\n`\nexport const Options = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\nexport const NextButton = styled(Button)`\n    &&& {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n`\nexport const Image = styled.img`\n    width: 100%;\n    padding-bottom: 16px;\n`\nconst Body = styled.div`\n    margin-top: 48px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid green;\n    border-radius: 80px;\n    padding: 48px;\n`\nconst Intro = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    height: 80vh;\n`\nconst HeaderText = styled(Title)`\n    &&& {\n        color: green;\n  `\nconst IntoText = styled(Text)`\n  &&& {\n      margin-top:30px;\n      font-weight:500;\n      font-size: 20px;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    const { id, qID = null } = useParams()\n    const [currentQuestion, setCurrentQuestion] = React.useState(null)\n    const [isNextDisabled, setIsNextDisabled] = React.useState(true)\n    const allSelectedOptions = React.useRef([])\n    const selectedOption = React.useRef({})\n    const [currentSelectedIndex, setCurrentSelectedIndex] = React.useState(null)\n    const allQuestionsRef = React.useRef({})\n    const [addonTable, setAddonTable] = React.useState({})\n    const inputRef = React.useRef()\n    const [inputAnswer, setInputAnswer] = React.useState('')\n    const globalFlags = React.useRef({\n        revenue_path_flag: false,\n        cost_path_flag: false,\n        non_ticket_revenue_path_flag: false,\n        ticket_revenue_path_flag: false,\n    })\n    const userInputCorrectAnswerRef = React.useRef(null)\n    const [optionFeedback, setOptionFeedback] = React.useState(null)\n    const [maxScores, setMaxScore] = React.useState({})\n\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/questions-${id}.json`,\n                    {}\n                )\n                const resp = await res.json()\n                const json = utils.transformRes(resp)\n                setMaxScore(utils.getMaxScores(json, id))\n                allQuestionsRef.current = json\n                let initialQuestion = qID\n                if (!initialQuestion) {\n                    initialQuestion =\n                        id === '1'\n                            ? 'SlideDrugInterviewer'\n                            : 'SlideAirlineInterviewer' //'SlideAirlineQ1_0'\n                }\n                const currentQ = json[initialQuestion]\n                setCurrentQuestion(currentQ)\n\n                if (json[currentQ.addOnTable]) {\n                    setAddonTable(json[currentQ.addOnTable])\n                }\n                if (\n                    !currentQ.choices ||\n                    currentQ.choices.length === 0 ||\n                    currentQ.expectInput === false\n                ) {\n                    setIsNextDisabled(false)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [id, qID])\n\n    function handleBack(id) {\n        push(`/list`)\n    }\n    function onOptionChange(e) {\n        const option = currentQuestion.choices[e.target.value]\n        option.questionId = currentQuestion.questionId\n        option.optionIndex = e.target.value\n        setCurrentSelectedIndex(e.target.value)\n        selectedOption.current = option\n        setIsNextDisabled(false)\n        if (currentQuestion.show_feedback) {\n            if (option.isCorrect) {\n                setOptionFeedback(currentQuestion.feedback_success)\n            } else {\n                setOptionFeedback(currentQuestion.feedback_failure)\n            }\n        }\n    }\n    function goNext() {\n        let nextQuestion = {}\n        if (!currentQuestion.choices || currentQuestion.choices.length === 0) {\n            nextQuestion =\n                allQuestionsRef.current[\n                    utils.getNextLink(currentQuestion, globalFlags)\n                ]\n        } else {\n            nextQuestion =\n                allQuestionsRef.current[\n                    utils.getNextLink(selectedOption.current, globalFlags)\n                ]\n        }\n\n        if (nextQuestion === undefined) {\n            console.log('--------------------------------------------------')\n            console.log(currentQuestion)\n            console.log(\n                allQuestionsRef.current[\n                    utils.getNextLink(currentQuestion, globalFlags)\n                ]\n            )\n            console.log(selectedOption.current)\n            console.log('--------------------------------------------------')\n            return\n        }\n        if (selectedOption.current) {\n            allSelectedOptions.current.push(selectedOption.current)\n        }\n\n        if (nextQuestion.choices && nextQuestion.choices.length) {\n            setIsNextDisabled(true)\n        }\n        if (\n            currentQuestion.bulletData &&\n            currentQuestion.expectInput &&\n            userInputCorrectAnswerRef.current\n        ) {\n            allSelectedOptions.current.push(currentQuestion)\n        }\n\n        if (currentQuestion.addOnTable) {\n            if (userInputCorrectAnswerRef.current && addonTable.expectInput) {\n                allSelectedOptions.current.push(addonTable)\n            }\n        }\n\n        const tbl = allQuestionsRef.current[nextQuestion.addOnTable]\n        setAddonTable(tbl)\n        if (tbl && tbl.expectInput) {\n            setIsNextDisabled(true)\n        }\n\n        if (nextQuestion.expectInput) {\n            setIsNextDisabled(true)\n        }\n        setCurrentQuestion(nextQuestion)\n        utils.setFlags(nextQuestion, globalFlags)\n        setCurrentSelectedIndex(null)\n        setInputAnswer(null)\n        selectedOption.current = null\n        // if (tbl) {\n        //     selectedOption.current = tbl\n        // }\n        setOptionFeedback(null)\n        userInputCorrectAnswerRef.current = null\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n\n    function handleChange(ev) {\n        const value = ev.target.value\n        inputRef.current = value\n    }\n    function submitInput() {\n        const value = Number(inputRef.current)\n        const hasTable = Object.keys(addonTable || {}).length > 0\n        if (hasTable) {\n            if (value === addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescription)\n                userInputCorrectAnswerRef.current = true\n            }\n            if (value > addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescriptionHigh)\n            }\n            if (value < addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescriptionLow)\n            }\n            setIsNextDisabled(false)\n            return\n        }\n        if (currentQuestion.bulletData) {\n            if (value === currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescription)\n                userInputCorrectAnswerRef.current = true\n            }\n            if (value > currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescriptionHigh)\n            }\n            if (value < currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescriptionLow)\n            }\n            setIsNextDisabled(false)\n            return\n        }\n    }\n\n    const groupedScore = utils.getGroupedScore(allSelectedOptions.current)\n    if (currentQuestion == null) {\n        return null\n    }\n\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader\n                    backIcon={\n                        <Popconfirm\n                            title=\"Are you sure you want to exit this case ?\"\n                            onConfirm={handleBack}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <ArrowLeftOutlined />\n                        </Popconfirm>\n                    }\n                    subTitle=\"Exit Case\"\n                    onBack={() => {}}\n                    extra={[\n                        <Button \n                            href=\"https://forms.gle/wdf3yMk2BAcEbxFZA\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            feedback\n                        </Button>,\n                    ]}\n                />\n            </Header>\n            {currentQuestion.successMessage && (\n                <Success\n                    currentQuestion={currentQuestion}\n                    usersScore={groupedScore}\n                    maxScore={maxScores}\n                    caseDetails={item}\n                    selectedOptions={allSelectedOptions.current || {}}\n                    allQuestions={allQuestionsRef.current}\n                />\n            )}\n            {!currentQuestion.successMessage && currentQuestion.intro && (\n                <Intro>\n                    <Body>\n                        <HeaderText level={1}>\n                            {currentQuestion.question.headerText}\n                        </HeaderText>\n                        <br />\n                        <IntoText>\n                            {currentQuestion.question.titleText}\n                        </IntoText>\n                    </Body>\n                    <NextButton\n                        type=\"primary\"\n                        disabled={isNextDisabled}\n                        block\n                        onClick={goNext}\n                        size=\"large\"\n                    >\n                        Next\n                    </NextButton>\n                </Intro>\n            )}\n\n            {!currentQuestion.successMessage && !currentQuestion.intro && (\n                <>\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={currentQuestion.question}\n                            classNames=\"slide\"\n                            timeout={{ enter: 300, exit: 300 }}\n                        >\n                            <Main>\n                                {!currentQuestion.image && (\n                                    <Question>\n                                        <QuestionText>\n                                            {currentQuestion.question}\n                                        </QuestionText>\n                                    </Question>\n                                )}\n                                {currentQuestion.image && (\n                                    <QuestionB>\n                                        <QuestionText>\n                                            {currentQuestion.question}\n                                        </QuestionText>\n                                        <div>\n                                            <Image\n                                                src={currentQuestion.image}\n                                            />\n                                        </div>\n                                    </QuestionB>\n                                )}\n                                <Options>\n                                    {currentQuestion.addOnTable && (\n                                        <div>\n                                            <AddonTable\n                                                addonTable={addonTable}\n                                                inputAnswer={inputAnswer}\n                                                handleChange={handleChange}\n                                                submitInput={submitInput}\n                                            />\n                                            <br />\n                                        </div>\n                                    )}\n                                    {currentQuestion.bulletData && (\n                                        <div>\n                                            <Bullets\n                                                question={currentQuestion}\n                                                inputAnswer={inputAnswer}\n                                                handleChange={handleChange}\n                                                submitInput={submitInput}\n                                            />\n                                        </div>\n                                    )}\n                                    <Choices\n                                        questionId={currentQuestion.question}\n                                        onOptionChange={onOptionChange}\n                                        currentSelectedIndex={\n                                            currentSelectedIndex\n                                        }\n                                        choices={currentQuestion.choices}\n                                        optionFeedback={optionFeedback}\n                                    />\n                                </Options>\n                            </Main>\n                        </CSSTransition>\n                    </TransitionGroup>\n                    <NextButton\n                        type=\"primary\"\n                        disabled={isNextDisabled}\n                        block\n                        onClick={goNext}\n                        size=\"large\"\n                    >\n                        Next\n                    </NextButton>\n                </>\n            )}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader, Input } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport { staticData } from '../../Cases.fixtures'\nimport { useInterval } from '../../hooks/timers'\nimport HelpModal from '../HelpModal/HelpModal.component';\n\nconst { Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 16px;\n`\nconst Structure = styled.div`\n    margin-top: 16px;\n    display: flex;\n    padding: 16px 0px;\n    overflow: auto;\n    flex-wrap: wrap;\n`\nconst AddStructure = styled.div`\n    height: 32px;\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n`\nconst RootNodeContainer = styled.div``\nconst ChildNodeContainer = styled.div``\nconst RootNode = styled.div`\n    width: 300px;\n`\nconst ChildNode = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 8px;\n    position: relative;\n    width: 300px;\n`\nconst Box = styled.div`\n    height: 32px;\n    width: 32px;\n        &:before {\n            position: absolute;\n            height: 32px;\n            margin-left: 11px;\n            border-left: 1px solid #d9d9d9;\n            content: \" \";\n        }\n        &:after {\n            position: absolute;\n            width: 17px;\n            height: 16px;\n            margin-left: 11px;\n            border-bottom: 1px solid #d9d9d9;\n            content: \" \";\n    }\n    }\n`\nconst Tree = styled.div`\n    margin-right: 24px;\n    margin-bottom: 80px;\n`\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nconst defaultTree = [\n    {\n        id: 0,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n    {\n        id: 1,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n    {\n        id: 2,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n]\nconst defaultInput = [\n    {\n        id: 0,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n    {\n        id: 1,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n    {\n        id: 2,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n]\n\nexport default function CreateStructure() {\n    const { goBack, push } = useHistory()\n    const { id } = useParams()\n    const [treeData, setTreeData] = React.useState(defaultTree)\n    const inputRefs = React.useRef(defaultInput)\n    const timeElapsed = React.useRef(0)\n    useInterval(() => {\n        timeElapsed.current += 500\n    }, 500)\n\n    function handleClick(id) {\n        localStorage.setItem(\n            'structure',\n            JSON.stringify(inputRefs.current || {})\n        )\n        localStorage.setItem('structureTime', timeElapsed.current)\n        push(`/case/${item.id}`)\n    }\n    function handleNodeEnterPress(ev) {\n        console.log('called')\n        const rootId = ev.target.id.split('_')[1]\n        const child = {\n            id: treeData[rootId].children.length,\n        }\n        const child2 = {\n            id: treeData[rootId].children.length,\n        }\n        const newTreeData = [...treeData]\n        newTreeData[rootId].children.push(child)\n        setTreeData(newTreeData)\n        inputRefs.current[rootId].children.push(child2)\n        setTimeout(() => {\n            const lastTextBox = document.getElementById(\n                `root_${rootId}_child_${\n                    inputRefs.current[rootId].children.length - 1\n                }`\n            )\n            lastTextBox.focus()\n        }, 100)\n    }\n    function handleAddNewBucket() {\n        const child = {\n            id: treeData.length,\n            children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n        }\n        const child2 = {\n            id: treeData.length,\n            children: [\n                { id: 0, value: '' },\n                { id: 1, value: '' },\n                { id: 2, value: '' },\n            ],\n        }\n        const tree = [...treeData]\n        tree.push(child)\n        setTreeData(tree)\n        inputRefs.current.push(child2)\n        setTimeout(() => {\n            const lastTextBox = document.getElementById(\n                `root_${tree.length - 1}`\n            )\n            lastTextBox.focus()\n        }, 100)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n\n    function handleInputChange(ev) {\n        const { id, value } = ev.target\n        const [, rootId, , childId = null] = id.split('_')\n\n        if (!childId) {\n            inputRefs.current[rootId].value = value\n        } else {\n            inputRefs.current[rootId].children[childId].value = value\n        }\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Case\" onBack={goBack} />\n            </Header>\n            <Body>\n                <div\n                    dangerouslySetInnerHTML={createMarkup(\n                        item.detailedDescription\n                    )}\n                />\n            </Body>\n            <Structure>\n                {treeData.map((tree) => (\n                    <Tree key={tree.id}>\n                        <RootNodeContainer>\n                            <RootNode>\n                                <Input\n                                    placeholder={`Bucket ${tree.id + 1}`}\n                                    autoComplete=\"false\"\n                                    onPressEnter={handleNodeEnterPress}\n                                    id={`root_${tree.id}`}\n                                    onChange={handleInputChange}\n                                />\n                            </RootNode>\n                        </RootNodeContainer>\n                        <ChildNodeContainer>\n                            {tree.children.map((child) => (\n                                <ChildNode key={child.id}>\n                                    <Box />\n                                    <Input\n                                        placeholder=\"Sub topic\"\n                                        autoComplete=\"false\"\n                                        onPressEnter={handleNodeEnterPress}\n                                        id={`root_${tree.id}_child_${child.id}`}\n                                        onChange={handleInputChange}\n                                    />\n                                </ChildNode>\n                            ))}\n                        </ChildNodeContainer>\n                    </Tree>\n                ))}\n                <AddStructure onClick={handleAddNewBucket}>\n                    <PlusCircleOutlined /> &nbsp;&nbsp;\n                    <Text>Add a new bucket</Text>\n                </AddStructure>\n            </Structure>\n            <br />\n            <Button type=\"primary\" block onClick={handleClick}>\n                Submit\n            </Button>\n        <HelpModal type=\"createStructurePage\" />\n\n        </Wrapper>\n    )\n}\n","import React from 'react';\nexport function useInterval(callback, delay) {\n    const savedCallback = React.useRef();\n  \n    // Remember the latest callback.\n    React.useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    // Set up the interval.\n    React.useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        const id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n      return () => {};\n    }, [delay]);\n  }\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader  } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\nimport HelpModal from '../HelpModal/HelpModal.component';\n\nconst { Text } = Typography\n\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid #f3f0f0;\n    padding: 16px;\n    min-height: 300px;\n`\nconst Questions = styled.div`\n    margin-top: 16px;\n    display: flex;\n    padding: 16px 0px;\n    overflow: auto;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`\nconst Question = styled.div`\n    display: flex;\n    padding: 16px;\n    align-items: center;\n    border: 1px solid #f3f0f0;\n    max-width: 47%;\n    width: 47%;\n    margin-bottom: 8px;\n    cursor: pointer;\n    &:hover {\n        background: #f3f0f0;\n        cursor: pointer;\n    }\n    background-color: ${(props) => (props.selected ? '#f3f0f0' : '')};\n`\nexport default function ClarifyingQuestions() {\n    const { goBack, push } = useHistory()\n    const { id } = useParams()\n    const item = staticData.find((e) => e.id.toString() === id)\n    const [questions, setQuestions] = React.useState([])\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null)\n    const list = React.useRef([])\n\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/case-${id}.json`,\n                    {}\n                )\n                const json = await res.json()\n                setQuestions(json)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [id])\n    \n    function handleClick(question) {\n        setSelectedQuestion(question)\n        list.current.push(question)\n        setQuestions((prevQuestions) =>\n            prevQuestions.map((item) => {\n                const ques = { ...item }\n                if (ques.id === question.id) {\n                    ques.selected = true\n                }\n                return ques\n            })\n        )\n    }\n    function handleCreate(){\n      localStorage.setItem(\n          'questions',\n          JSON.stringify(list.current || {})\n      )\n      push(`/create-structure/${item.id}`)\n    }\n    return (\n        <div>\n            <Header>\n                <PageHeader subTitle=\"Back to Case\" onBack={goBack} />\n            </Header>\n            <Body>\n                {selectedQuestion && (\n                    <div>\n                        {selectedQuestion.type === 'text' && (\n                            <Text>{selectedQuestion.text}</Text>\n                        )}\n                        {selectedQuestion.type === 'image' && (\n                            <img src={selectedQuestion.imageUrl} alt=\"img\" />\n                        )}\n                    </div>\n                )}\n            </Body>\n            <Questions>\n                {questions.map((question) => (\n                    <Question\n                        key={question.id}\n                        onClick={() => handleClick(question)}\n                        selected={question.selected}\n                    >\n                        <Text>{question.question}</Text>\n                    </Question>\n                ))}\n            </Questions>\n            <Button type=\"primary\" block onClick={handleCreate}>\n                Create Structure\n            </Button>\n        <HelpModal type=\"clearifyingQuestionsPage\" />\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport HomePage from './HomePage/HomePage.jsx'\nimport ListPage from './ListPage/ListPage.jsx'\nimport DetailsPage from './DetailsPage/DetailsPage.jsx'\nimport CasePage from './CasePage/CasePage.jsx'\nimport CreateStructure from './CreateStructure/CreateStructure.jsx'\nimport ClearifyingQuestions from './ClearifyingQuestions/ClearifyingQuestions.jsx'\n\nexport default function Router() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\">\n                    <HomePage />\n                </Route>\n                <Route exact path=\"/list\">\n                    <ListPage />\n                </Route>\n                <Route exact path=\"/details/:id\">\n                    <DetailsPage />\n                </Route>\n                <Route exact path=\"/case/:id/:qID?\">\n                    <CasePage />\n                </Route>\n                <Route exact path=\"/create-structure/:id\">\n                    <CreateStructure />\n                </Route>\n                <Route exact path=\"/clearifying-questions/:id\">\n                    <ClearifyingQuestions />\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n","import React from 'react'\nimport Routes from './Routes'\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Routes />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}