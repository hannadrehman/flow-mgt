{"version":3,"sources":["Routes/HomePage/HomePage.jsx","Cases.fixtures.js","Routes/ListPage/ListPage.jsx","Routes/DetailsPage/DetailsPage.jsx","Routes/CasePage/Choices.component.jsx","Routes/CasePage/utilities.js","Routes/CasePage/Score.component.jsx","Routes/CasePage/Structure.component.jsx","Routes/CasePage/Success.component.jsx","Routes/CasePage/AddonTable.component.jsx","Routes/CasePage/Bullets.component.jsx","Routes/CasePage/CasePage.jsx","Routes/CreateStructure/CreateStructure.jsx","Routes/ClearifyingQuestions/ClearifyingQuestions.jsx","Routes/index.jsx","App.js","index.js"],"names":["Title","Typography","Wrapper","styled","div","HomePage","push","useHistory","level","onClick","type","staticData","id","title","description","detailedDescription","color","Text","Header","Grid","GridItem","GridImage","props","Container","subTitle","onBack","map","item","key","block","danger","Body","goBack","useParams","html","find","e","toString","dangerouslySetInnerHTML","__html","RadioButton","Radio","Button","RadioGroup","Group","RadioContainer","RadioBtn","OptionText","Choices","onOptionChange","currentSelectedIndex","choices","optionFeedback","React","useMemo","copyList","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","onChange","defaultValue","value","index","answer","getNextLink","globalFlags","is_link_direct","conditionId","current","revenue_path_flag","cost_path_flag","non_ticket_revenue_path_flag","alert","links_to","transformRes","resp","json","Object","entries","forEach","scoreMap","choice","sum","score","reduce","acc","maxIndex","maxScore","k","v","correctAnswer","defaultFlags","ticket_revenue_path_flag","setFlags","question","flags","tracePath","allQuestions","scores","nextQuestion","selectedOption","options","option","typeScore","getCorrectType","successMessage","getMaxScores","questions","initialQuestion","rigor","judgment","structuring","synthesis","getPercent","total","achieved","ceil","typesText","Mains","Average","Bars","Bar","Heading","AvgCard","Card","LargeText","ChartWrapper","Charter","Score","usersScore","caseDetails","graph","max","data","subject","average","user","fullMark","userScore","totalScore","utils","keys","toUpperCase","percent","strokeColor","percentage","status","cx","cy","outerRadius","width","height","dataKey","name","stroke","fill","fillOpacity","Structure","Success","currentQuestion","useState","selected","setSelected","ev","style","defaultSelectedKeys","mode","Item","Table","table","AddonTable","addonTable","inputAnswer","handleChange","submitInput","tableData","tables","i","rows","row","columns","col","label","expectInput","placeholder","addonAfter","Bullets","bulletData","bullets","QuestionText","Main","Question","QuestionB","Options","NextButton","Image","img","qID","setCurrentQuestion","isNextDisabled","setIsNextDisabled","allSelectedOptions","useRef","setCurrentSelectedIndex","allQuestionsRef","setAddonTable","inputRef","setInputAnswer","setOptionFeedback","maxScores","setMaxScore","goNext","undefined","console","log","tbl","addOnTable","useEffect","a","fetch","res","currentQ","getData","target","Number","hasTable","messageDescription","messageDescriptionHigh","messageDescriptionLow","groupedScore","filter","x","accum","intro","headerText","titleText","disabled","size","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","image","src","questionId","show_feedback","isCorrect","feedback_success","feedback_failure","AddStructure","RootNodeContainer","ChildNodeContainer","RootNode","ChildNode","Box","Tree","defaultTree","children","defaultInput","CreateStructure","treeData","setTreeData","inputRefs","handleNodeEnterPress","rootId","split","child","child2","newTreeData","setTimeout","document","getElementById","focus","handleInputChange","childId","tree","autoComplete","onPressEnter","PlusCircleOutlined","localStorage","setItem","JSON","stringify","Questions","ClarifyingQuestions","setQuestions","selectedQuestion","setSelectedQuestion","list","text","imageUrl","alt","prevQuestions","ques","handleClick","Router","exact","path","App","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.47f7dbd6.chunk.js","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button } from 'antd'\nconst { Title } = Typography\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    flex-direction: column;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    function handleClick() {\n        push('list')\n    }\n    return (\n        <Wrapper>\n            <div>\n                <Title level={5}>\n                    Welcome to Caseadilla where we help you chew case interviews\n                    and land opportunities of your choice\n                </Title>\n            </div>\n            <div>\n                <Button onClick={handleClick} type=\"primary\">Start Chewing</Button>\n            </div>\n        </Wrapper>\n    )\n}\n","const staticData = [\n    {\n        id: 1,\n        title: 'Drug Case',\n        description:\n            'Help the Client (a drug manufacturer) to set a suitable price for their new drug',\n        detailedDescription:\n            'DRUG CASE OVERVIEW <br/> Today, we are going to discuss the case of a pharmaceutical company based in the U.S. The client has developed a new drug, PrevenT (Prevent Thrombosis), that helps reduce the rate at which a particular complication of hip-replacement surgery, deep-vein thrombosis (DVT), occurs. <br/>What you need to know is that DVT can lead to very serious medical conditions, including higher risk of pulmonary embolism (PE) or major bleeding. <br/>PrevenT will directly compete against Clearvenax, an established product that is also used to reduce rates of DVT and hence DVT-related complications. Clearvenax is sold at $4 per dose and has a variable production cost of $1 per dose. The client has asked you to help set a suitable price for PrevenT. <br/>',\n        color: '#ccf6c8',\n    },\n    {\n        id: 2,\n        title: 'Airline Case',\n        description:\n            'Help the client (a low cost carrier) to remain profitable despite a recent fuel price hike',\n        detailedDescription:\n            \" 'AIRLINE CASE OVERVIEW <br/> Today, we'll discuss the case of our client, a low-cost carrier (LCC) airline that is among the largest in Asia. After initial losses when it was established, a few years ago, it has finally become profitable. The company's profitability is now threatened, however, by a sharp increase in fuel prices, to the tune of more than 50 percent.<br/>       The client is therefore questioning its business model and looking to develop an immediate response to the situation that will ensure a return to profitability. Your task is also to help develop a strategy to ensure that the company remains profitable for the years to come.<br/>\",\n        color: '#fafcc2',\n    },\n]\nexport { staticData }\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n    margin-bottom:16px;\n`\nconst Grid = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 16px;\n    flex-wrap: wrap;\n    margin: -32px auto;\n    justify-content: center;\n`\nconst GridItem = styled.div`\n    max-width: 300px;\n    margin-top: 32px;\n    margin: 16px;\n`\n\nconst GridImage = styled.div`\n    width: 300px;\n    height: 300px;\n    background-color: ${(props) => props.color};\n`\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    align-content: center;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    function handleClick(id) {\n        push(`/details/${id}`)\n    }\n    function goHome(id) {\n        push(`/`)\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Home\" onBack={goHome} />\n            </Header>\n\n            <Grid>\n                {staticData.map((item) => (\n                    <GridItem key={item.id}>\n                        <GridImage color={item.color} />\n                        <Container>\n                            <Title level={5}>{item.title}</Title>\n                        </Container>\n                        <Container>\n                            <Text>{item.description}</Text>\n                        </Container>\n                        <Container>\n                            <Button\n                                block\n                                danger\n                                onClick={() => handleClick(item.id)}\n                            >\n                                Try {item.title}\n                            </Button>\n                        </Container>\n                    </GridItem>\n                ))}\n            </Grid>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    align-content: center;\n`\n\nexport const Body = styled.div`\n    height: 300px;\n    margin-top: 48px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 0 16px;\n`\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nexport default function HomePage() {\n    const { push, goBack } = useHistory()\n    const { id } = useParams()\n\n    function handleStructureClick(id) {\n        push(`/create-structure/${item.id}`)\n    }\n    function handleClearifyingQuestionsClick(id) {\n        push(`/clearifying-questions/${item.id}`)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Case Library\" onBack={goBack} />\n            </Header>\n            <Body>\n                <Title level={5}>{item.title}</Title>\n                <div\n                    dangerouslySetInnerHTML={createMarkup(\n                        item.detailedDescription\n                    )}\n                />\n            </Body>\n            <br />\n            <Container>\n                <Button type=\"primary\" block onClick={handleClearifyingQuestionsClick}>\n                    Ask clarifying questions\n                </Button>\n                &nbsp;&nbsp;\n                <Button type=\"primary\" block onClick={handleStructureClick}>\n                    Create Strcuture\n                </Button>\n            </Container>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Radio, Typography } from 'antd'\n\nconst RadioButton = Radio.Button\nconst RadioGroup = Radio.Group\nconst { Text } = Typography\n\nexport const RadioContainer = styled(RadioGroup)`\n    &&& {\n        width: 100%;\n    }\n`\nexport const RadioBtn = styled(RadioButton)`\n    display: block;\n    margin-bottom: 8px;\n    width: 100%;\n    height: auto;\n    line-height: 1.5;\n    padding: 8px;\n`\nconst OptionText = styled(Text)`\n    font-size: 16px;\n`\nconst Wrapper = styled.div`\n    .slide-enter {\n        transform: translateX(100%);\n    }\n    .slide-enter-active {\n        transform: translateX(0%);\n        transition: transform 300ms ease-in-out;\n    }\n    .slide-exit {\n        transform: translateX(0%);\n    }\n    .slide-exit-active {\n        transform: translateX(-100%);\n        transition: transform 300ms ease-in-out;\n    }\n`\nfunction shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex)\n        currentIndex -= 1\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex]\n        array[currentIndex] = array[randomIndex]\n        array[randomIndex] = temporaryValue\n    }\n}\n\nexport default function Choices({\n    onOptionChange,\n    currentSelectedIndex,\n    choices,\n    optionFeedback,\n}) {\n    const shuffledChoices = React.useMemo(() => {\n        const copyList = [...(choices || [])]\n        shuffle(copyList)\n        return copyList\n    }, [choices])\n\n    if (!choices || choices.length === 0) {\n        return null\n    }\n    return (\n        <>\n            <RadioContainer\n                onChange={onOptionChange}\n                defaultValue=\"a\"\n                value={currentSelectedIndex}\n            >\n                {choices.map((item, index) => (\n                    <RadioBtn key={index} value={index}>\n                        <OptionText>{item.answer}</OptionText>\n                    </RadioBtn>\n                ))}\n            </RadioContainer>\n            <Text>{optionFeedback}</Text>\n        </>\n    )\n}\n","export function getGroupedScore(list) {\n    return list\n        .filter((x) => x.score)\n        .map((x) => x.score)\n        .reduce(\n            (accum, item) => {\n                accum.judgment = accum.judgment + item.judgment\n                accum.rigor = accum.rigor + item.rigor\n                accum.structuring = accum.structuring + item.structuring\n                accum.synthesis = accum.synthesis + item.synthesis\n                return accum\n            },\n            { judgment: 0, rigor: 0, structuring: 0, synthesis: 0 }\n        )\n}\n\nexport function getNextLink(item, globalFlags) {\n    if (item.is_link_direct === false) {\n        const qid = item.conditionId\n        switch (qid) {\n            case 1:\n                if (globalFlags.current.revenue_path_flag) {\n                    return 'SlideAirlineQ3_121_6_0'\n                } else {\n                    return 'SlideAirlineQ3_121_2_0'\n                }\n            case 2:\n                if (globalFlags.current.cost_path_flag === false) {\n                    return 'SlideAirlineQ4_59_3_0'\n                } else {\n                    return 'SlideAirlineQ4_59_6_0'\n                }\n\n            case 3:\n                if (globalFlags.current.non_ticket_revenue_path_flag) {\n                    if (globalFlags.current.cost_path_flag === false) {\n                        return 'SlideAirlineQ4_59_3_0'\n                    } else {\n                        return 'SlideAirlineQ4_59_6_0'\n                    }\n                } else {\n                    if (globalFlags.current.cost_path_flag === false) {\n                        return 'SlideAirlineQ4_59_5_0b'\n                    } else {\n                        return 'SlideAirlineQ4_59_5_0c'\n                    }\n                }\n            default:\n                alert('mismatch')\n                return\n        }\n    }\n    return item.links_to\n}\n\nexport function transformRes(resp) {\n    const json = { ...resp }\n    Object.entries(json).forEach(([key, value]) => {\n        if (value.choices && value.choices.length) {\n            const scoreMap = {}\n            value.choices.forEach((choice, index) => {\n                const sum = Object.entries(choice.score)\n                    .map(([k, v]) => v)\n                    .reduce((acc, item) => (acc += item), 0)\n                scoreMap[index] = sum\n            })\n            let maxIndex = null\n            let maxScore = -100\n            Object.entries(scoreMap).forEach(([k, v]) => {\n                if (v > maxScore) {\n                    maxScore = v\n                    maxIndex = k\n                }\n            })\n            value.choices[maxIndex].correctAnswer = true\n        }\n    })\n    return json\n}\n\nconst defaultFlags = {\n    current: {\n        revenue_path_flag: false,\n        cost_path_flag: false,\n        non_ticket_revenue_path_flag: false,\n        ticket_revenue_path_flag: false,\n    },\n}\n\nlet globalFlags = defaultFlags\n\nexport function setFlags(question, flags) {\n    if (question.revenue_path_flag || question.revenue_path_flag === false) {\n        flags.current.revenue_path_flag = question.revenue_path_flag\n    }\n    if (question.cost_path_flag || question.cost_path_flag === false) {\n        flags.current.cost_path_flag = question.cost_path_flag\n    }\n    if (\n        question.non_ticket_revenue_path_flag ||\n        question.non_ticket_revenue_path_flag === false\n    ) {\n        flags.current.non_ticket_revenue_path_flag =\n            question.non_ticket_revenue_path_flag\n    }\n    if (\n        question.ticket_revenue_path_flag ||\n        question.ticket_revenue_path_flag === false\n    ) {\n        flags.current.ticket_revenue_path_flag =\n            question.ticket_revenue_path_flag\n    }\n}\n\nfunction getCorrectType(options, type) {\n    let maxIndex = 0\n    let maxScore = -100\n    options.forEach((option, index) => {\n        const typeScore = option.score[type] || 0\n        if (typeScore > maxScore) {\n            maxScore = typeScore\n            maxIndex = index\n        }\n    })\n    return options[maxIndex]\n}\n\nfunction tracePath(question, allQuestions, scores, type) {\n    let nextQuestion = null\n    if (!question.choices) {\n        nextQuestion = allQuestions[getNextLink(question, globalFlags)]\n    } else {\n        const selectedOption = getCorrectType(question.choices, type)\n        nextQuestion = allQuestions[getNextLink(selectedOption, globalFlags)]\n        scores[type] += selectedOption.score[type]\n    }\n    setFlags(nextQuestion, globalFlags)\n    if (!nextQuestion.successMessage) {\n        tracePath(nextQuestion, allQuestions, scores, type)\n    }\n}\n\nexport function getMaxScores(questions, id) {\n    let initialQuestion = null\n    initialQuestion =\n        id === '1'\n            ? 'SlideDrugProblemStatement'\n            : 'SlideAirlineProblemStatement' //'SlideAirlineQ1_0'\n\n    globalFlags = defaultFlags\n    const scores = { rigor: 0, judgment: 0, structuring: 0, synthesis: 0 }\n    tracePath(questions[initialQuestion], questions, scores, 'rigor')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'judgment')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'structuring')\n    globalFlags = defaultFlags\n    tracePath(questions[initialQuestion], questions, scores, 'synthesis')\n    return scores\n}\n\nexport function getPercent(total, achieved) {\n    return Math.ceil((achieved / total) * 100)\n}\n\nexport function getColor(percentage) {\n    if (percentage > 70) {\n        return '#4caf50'\n    }\n    if (percentage > 30) {\n        return '#ffc107'\n    }\n    return '#f44336'\n}\n\nconst typesText = {\n    judgment: 'indicating your intuition in making choices',\n    rigor: 'indicating your quantitative decision making',\n    structuring: 'indicating your organization of thoughts/idea',\n    synthesis: 'ability to convey more in less',\n}\nexport function getTypeText(type) {\n    return typesText[type]\n}\n\nexport function getWeightedScore(userScore, totalScore) {\n    // ((100*user_rigor_score)/max_rigor_calculated_value) *assigned_weight\n    const judgment = ((100 * userScore.judgment) / totalScore.judgment) * 0.25\n    const rigor = ((100 * userScore.rigor) / totalScore.rigor) * 0.25\n    const structuring =\n        ((100 * userScore.structuring) / totalScore.structuring) * 0.25\n    const synthesis =\n        ((100 * userScore.synthesis) / totalScore.synthesis) * 0.25\n    return Math.ceil(judgment + rigor + structuring + synthesis);    \n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as utils from './utilities'\nimport { Typography, Progress, Card, Tooltip } from 'antd'\nimport {\n    Radar,\n    RadarChart,\n    PolarGrid,\n    Legend,\n    PolarAngleAxis,\n    PolarRadiusAxis,\n} from 'recharts'\n\nconst { Text, Title } = Typography\n\nconst Wrapper = styled.div``\nconst Mains = styled.div`\n    display: flex;\n`\nconst Average = styled.div`\n    padding: 8px;\n`\nconst Bars = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n`\nconst Bar = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    min-height: 120px;\n    justify-content: space-evenly;\n    &:nth-child(2n + 2) {\n        padding-left: 28px;\n    }\n    &:nth-child(n + 3) {\n        margin-top: 40px;\n    }\n`\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\n\nconst AvgCard = styled(Card)`\n    width: 200px;\n    height: 100%;\n    margin-right: 16px;\n    .ant-card-body {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        padding: 0;\n        height: 200px;\n    }\n`\nconst LargeText = styled.div`\n    font-size: 48px;\n    font-weight: bold;\n`\nconst ChartWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`\nconst Charter = styled.div``\n\nexport default function Score({ usersScore, maxScore, caseDetails }) {\n    const graph = React.useMemo(() => {\n        let max = -100\n        Object.entries(maxScore).forEach(([, v]) => {\n            if (v > max) {\n                max = v\n            }\n        })\n        const data = [\n            {\n                subject: 'Judgment',\n                average: maxScore.synthesis - 4,\n                user: usersScore.judgment,\n                fullMark: maxScore.judgment,\n            },\n            {\n                subject: 'Rigor',\n                average: maxScore.synthesis - 3,\n                user: usersScore.rigor,\n                fullMark: maxScore.rigor,\n            },\n            {\n                subject: 'Structuring',\n                average: maxScore.synthesis - 2,\n                user: usersScore.structuring,\n                fullMark: maxScore.structuring,\n            },\n            {\n                subject: 'Synthesis',\n                average: maxScore.synthesis - 5,\n                user: usersScore.synthesis,\n                fullMark: maxScore.synthesis,\n            },\n        ]\n        return { data, max }\n    }, [maxScore, usersScore])\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared Score`}\n                </Title>\n            </Heading>\n            <Mains>\n                <Average>\n                    <AvgCard title=\"Weighted average\">\n                        <LargeText>\n                            {utils.getWeightedScore(usersScore, maxScore)}\n                        </LargeText>\n                    </AvgCard>\n                </Average>\n                <Bars>\n                    {Object.keys(maxScore).map((item) => (\n                        <Bar>\n                            <Text>\n                                <b>{`${item.toUpperCase()} : `}</b>{' '}\n                                {utils.getTypeText(item)}\n                            </Text>\n                            <Tooltip\n                                title={`${usersScore[item]} out of ${maxScore[item]}`}\n                            >\n                                <Progress\n                                    percent={utils.getPercent(\n                                        maxScore[item],\n                                        usersScore[item]\n                                    )}\n                                    strokeColor={utils.getColor(\n                                        utils.getPercent(\n                                            maxScore[item],\n                                            usersScore[item]\n                                        )\n                                    )}\n                                    status=\"active\"\n                                />\n                            </Tooltip>\n                        </Bar>\n                    ))}\n                </Bars>\n            </Mains>\n            <ChartWrapper>\n                <Charter>\n                    <RadarChart\n                        cx={300}\n                        cy={250}\n                        outerRadius={150}\n                        width={500}\n                        height={500}\n                        data={graph.data}\n                    >\n                        <PolarGrid />\n                        <PolarAngleAxis dataKey=\"subject\" />\n                        <PolarRadiusAxis />\n                        <Radar\n                            name=\"You\"\n                            dataKey=\"user\"\n                            stroke=\"#8884d8\"\n                            fill=\"#8884d8\"\n                            fillOpacity={0.6}\n                        />\n                        <Radar\n                            name=\"Average\"\n                            dataKey=\"average\"\n                            stroke=\"#82ca9d\"\n                            fill=\"#82ca9d\"\n                            fillOpacity={0.6}\n                        />\n                        <Legend />\n                    </RadarChart>\n                </Charter>\n            </ChartWrapper>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography } from 'antd'\n\nconst { Title } = Typography\n\nconst Wrapper = styled.div``\nconst Mains = styled.div`\n    display: flex;\n`\nconst Heading = styled.div`\n    padding-bottom: 16px;\n`\n\nexport default function Structure({ usersScore, maxScore, caseDetails }) {\n    return (\n        <Wrapper>\n            <Heading>\n                <Title level={3}>\n                    {`You are done! Congratulations on completing the ${caseDetails.title}. Here is how we think you fared Structure`}\n                </Title>\n            </Heading>\n            <Mains>\n                <h1>hahahahaha</h1>\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Score from './Score.component'\nimport Structure from './Structure.component'\nimport {  Menu } from 'antd'\n\nconst Wrapper = styled.div`\n    display: flex;\n`\nexport const Mains = styled.div`\n    padding-left: 16px;\n    padding-top: 16px;\n`\n\nexport default function Success({ currentQuestion, usersScore, maxScore, caseDetails }) {\n    const [selected, setSelected] = React.useState('1')\n   \n    return (\n        <Wrapper>\n            <div>\n                <Menu\n                    onClick={(ev)=>setSelected(ev.key)}\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['1']}\n                    mode=\"inline\"\n                >\n                    <Menu.Item key=\"1\">Score</Menu.Item>\n                    <Menu.Item key=\"2\">Structure</Menu.Item>\n                    <Menu.Item key=\"3\">Review</Menu.Item>\n                    <Menu.Item key=\"4\">Relevance</Menu.Item>\n                </Menu>\n            </div>\n            <Mains>\n                {selected === '1' && (\n                    <Score usersScore={usersScore} maxScore={maxScore} caseDetails={caseDetails} />\n                )}\n                {selected === '2' && (\n                    <Structure caseDetails={caseDetails} />\n                )}\n            </Mains>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Input } from 'antd'\nconst { Title, Text } = Typography\n\nexport const Table = styled.table`\n    width: 100%;\n    margin-top: 16px;\n    border: 1px solid #d7cdcd;\n    td,\n    th {\n        padding: 4px;\n        border-right: 1px solid #d7cdcd;\n    }\n    tr {\n        border-bottom: 1px solid #d7cdcd;\n    }\n`\n\nexport default function AddonTable({\n    addonTable,\n    inputAnswer,\n    handleChange,\n    submitInput,\n}) {\n    return (\n        <div>\n            {Object.keys(addonTable).length > 0 && (\n                <div>\n                    <Title level={5}>{addonTable.question}</Title>\n                    {addonTable.tableData.tables.map((table, i) => (\n                        <Table key={i}>\n                            <thead>\n                                {table.title && (\n                                    <tr>\n                                        <th>{table.title}</th>\n                                    </tr>\n                                )}\n                            </thead>\n                            <tbody>\n                                {table.rows.map((row, id) => (\n                                    <tr key={id}>\n                                        {row.columns.map((col, id) => (\n                                            <td key={id}>{col.label}</td>\n                                        ))}\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    ))}\n                    {addonTable.expectInput && (\n                        <div>\n                            <br />\n                            <Input\n                                onChange={handleChange}\n                                placeholder=\"Enter value\"\n                                addonAfter={\n                                    <span onClick={submitInput}>Submit</span>\n                                }\n                            />\n                            <div>\n                                <br />\n                                {inputAnswer && <Text>{inputAnswer}</Text>}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Input } from 'antd'\nconst { Text } = Typography\n\nexport default function Bullets({\n    question,\n    inputAnswer,\n    handleChange,\n    submitInput,\n}) {\n    return (\n        <div>\n            {Object.keys(question).length && (\n                <>\n                    <Text>{question.bulletData.title}</Text>\n                    <ul>\n                        {question.bulletData.bullets.map((e, i) => (\n                            <li>{e}</li>\n                        ))}\n                    </ul>\n                    {question.expectInput && (\n                        <div>\n                            <br />\n                            <Input\n                                onChange={handleChange}\n                                placeholder=\"Enter value\"\n                                addonAfter={\n                                    <span onClick={submitInput}>Submit</span>\n                                }\n                            />\n                            <div>\n                                <br />\n                                {inputAnswer && <Text>{inputAnswer}</Text>}\n                            </div>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\nimport Choices from './Choices.component'\nimport Success from './Success.component'\nimport AddonTable from './AddonTable.component'\nimport Bullets from './Bullets.component'\nimport * as utils from './utilities'\n\nconst { Text, Title } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst QuestionText = styled(Text)`\n    font-size: 24px;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\n\nconst Main = styled.div`\n    display: flex;\n    height: calc(100vh - 100px);\n`\nexport const Question = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    border-right: 1px solid #e1dddd;\n    background: #f9f9f9;\n    display: flex;\n    align-content: center;\n    align-items: center;\n`\n\nexport const QuestionB = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n    border-right: 1px solid #e1dddd;\n    background: #f9f9f9;\n    display: flex;\n    align-content: center;\n    align-items: center;\n    flex-direction: column;\n    justify-content: space-around;\n`\nexport const Options = styled.div`\n    padding: 16px;\n    width: 50%;\n    min-width: 50%;\n    height: 100%;\n`\nexport const NextButton = styled(Button)`\n    &&& {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n`\nexport const Image = styled.img`\n    width: 100%;\n    padding-bottom: 16px;\n`\n\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 16px;\n`\n\nexport default function HomePage() {\n    const { push } = useHistory()\n    const { id, qID = null } = useParams()\n    const [currentQuestion, setCurrentQuestion] = React.useState(null)\n    const [isNextDisabled, setIsNextDisabled] = React.useState(true)\n    const allSelectedOptions = React.useRef([])\n    const selectedOption = React.useRef({})\n    const [currentSelectedIndex, setCurrentSelectedIndex] = React.useState(null)\n    const allQuestionsRef = React.useRef({})\n    const [addonTable, setAddonTable] = React.useState({})\n    const inputRef = React.useRef()\n    const [inputAnswer, setInputAnswer] = React.useState('')\n    const globalFlags = React.useRef({\n        revenue_path_flag: false,\n        cost_path_flag: false,\n        non_ticket_revenue_path_flag: false,\n        ticket_revenue_path_flag: false,\n    })\n    const [optionFeedback, setOptionFeedback] = React.useState(null)\n    const [maxScores,setMaxScore] = React.useState({})\n\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/questions-${id}.json`,\n                    {}\n                )\n                const resp = await res.json()\n                const json = utils.transformRes(resp)\n                setMaxScore(utils.getMaxScores(json, id))\n                allQuestionsRef.current = json\n                let initialQuestion = qID\n                if (!initialQuestion) {\n                    initialQuestion =\n                        id === '1'\n                            ? 'SlideDrugProblemStatement'\n                            : 'SlideAirlineProblemStatement' //'SlideAirlineQ1_0'\n                }\n                const currentQ = json[initialQuestion]\n                setCurrentQuestion(currentQ)\n\n                if (json[currentQ.addOnTable]) {\n                    setAddonTable(json[currentQ.addOnTable])\n                }\n                if (\n                    !currentQ.choices ||\n                    currentQ.choices.length === 0 ||\n                    currentQ.expectInput === false\n                ) {\n                    setIsNextDisabled(false)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [id, qID])\n\n    function handleBack(id) {\n        push(`/list`)\n    }\n    function onOptionChange(e) {\n        const option = currentQuestion.choices[e.target.value]\n        setCurrentSelectedIndex(e.target.value)\n        selectedOption.current = option\n        setIsNextDisabled(false)\n        if (currentQuestion.show_feedback) {\n            if (option.isCorrect) {\n                setOptionFeedback(currentQuestion.feedback_success)\n            } else {\n                setOptionFeedback(currentQuestion.feedback_failure)\n            }\n        }\n    }\n    function goNext() {\n        let nextQuestion = {}\n        if (!currentQuestion.choices || currentQuestion.choices.length === 0) {\n            nextQuestion =\n                allQuestionsRef.current[\n                    utils.getNextLink(currentQuestion, globalFlags)\n                ]\n        } else {\n            nextQuestion =\n                allQuestionsRef.current[\n                    utils.getNextLink(selectedOption.current, globalFlags)\n                ]\n        }\n\n        if (nextQuestion === undefined) {\n            console.log('--------------------------------------------------')\n            console.log(currentQuestion)\n            console.log(\n                allQuestionsRef.current[\n                    utils.getNextLink(currentQuestion, globalFlags)\n                ]\n            )\n            console.log(selectedOption.current)\n            console.log('--------------------------------------------------')\n            return\n        }\n        setCurrentQuestion(nextQuestion)\n        allSelectedOptions.current.push(\n            selectedOption.current || currentQuestion\n        )\n        if (nextQuestion.choices && nextQuestion.choices.length) {\n            setIsNextDisabled(true)\n        }\n        const tbl = allQuestionsRef.current[nextQuestion.addOnTable]\n        if (tbl) {\n            setAddonTable(tbl)\n            if (tbl.expectInput) {\n                setIsNextDisabled(true)\n            }\n        }\n        if (nextQuestion.expectInput) {\n            setIsNextDisabled(true)\n        }\n        utils.setFlags(nextQuestion, globalFlags)\n        setCurrentSelectedIndex(null)\n        setInputAnswer(null)\n        selectedOption.current = null\n        if (tbl) {\n            selectedOption.current = tbl\n        }\n        setOptionFeedback(null)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n\n    function handleChange(ev) {\n        const value = ev.target.value\n        inputRef.current = value\n    }\n    function submitInput() {\n        const value = Number(inputRef.current)\n        const hasTable = Object.keys(addonTable || {}).length > 0\n        console.log(currentQuestion, addonTable)\n        if (hasTable) {\n            if (value === addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescription)\n            }\n            if (value > addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescriptionHigh)\n            }\n            if (value < addonTable.correctAnswer) {\n                setInputAnswer(addonTable.messageDescriptionLow)\n            }\n            setIsNextDisabled(false)\n            return\n        }\n        if (currentQuestion.bulletData) {\n            if (value === currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescription)\n            }\n            if (value > currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescriptionHigh)\n            }\n            if (value < currentQuestion.correctAnswer) {\n                setInputAnswer(currentQuestion.messageDescriptionLow)\n            }\n            setIsNextDisabled(false)\n            return\n        }\n    }\n\n    const groupedScore = utils.getGroupedScore(allSelectedOptions.current)\n\n    if (currentQuestion == null) {\n        return null\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle={item.title} onBack={handleBack} />\n            </Header>\n            {currentQuestion.successMessage && (\n                <Success\n                    currentQuestion={currentQuestion}\n                    usersScore={groupedScore}\n                    maxScore={maxScores}\n                    caseDetails={item}\n                />\n            )}\n            {!currentQuestion.successMessage && currentQuestion.intro && (\n                <div>\n                    <Body>\n                        <Title level={5}>\n                            {currentQuestion.question.headerText}\n                        </Title>\n                        <Text>{currentQuestion.question.titleText}</Text>\n                    </Body>\n                    <NextButton\n                        type=\"primary\"\n                        disabled={isNextDisabled}\n                        block\n                        onClick={goNext}\n                        size=\"large\"\n                    >\n                        Next\n                    </NextButton>\n                </div>\n            )}\n\n            {!currentQuestion.successMessage && !currentQuestion.intro && (\n                <>\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={currentQuestion.question}\n                            classNames=\"slide\"\n                            timeout={{ enter: 300, exit: 300 }}\n                        >\n                            <Main>\n                                {!currentQuestion.image && (\n                                    <Question>\n                                        <QuestionText>\n                                            {currentQuestion.question}\n                                        </QuestionText>\n                                    </Question>\n                                )}\n                                {currentQuestion.image && (\n                                    <QuestionB>\n                                        <QuestionText>\n                                            {currentQuestion.question}\n                                        </QuestionText>\n                                        <div>\n                                            <Image\n                                                src={currentQuestion.image}\n                                            />\n                                        </div>\n                                    </QuestionB>\n                                )}\n                                <Options>\n                                    {currentQuestion.addOnTable && (\n                                        <div>\n                                            <AddonTable\n                                                addonTable={addonTable}\n                                                inputAnswer={inputAnswer}\n                                                handleChange={handleChange}\n                                                submitInput={submitInput}\n                                            />\n                                        </div>\n                                    )}\n                                    {currentQuestion.bulletData && (\n                                        <div>\n                                            <Bullets\n                                                question={currentQuestion}\n                                                inputAnswer={inputAnswer}\n                                                handleChange={handleChange}\n                                                submitInput={submitInput}\n                                            />\n                                        </div>\n                                    )}\n                                    <Choices\n                                        questionId={currentQuestion.question}\n                                        onOptionChange={onOptionChange}\n                                        currentSelectedIndex={\n                                            currentSelectedIndex\n                                        }\n                                        choices={currentQuestion.choices}\n                                        optionFeedback={optionFeedback}\n                                    />\n                                </Options>\n                            </Main>\n                        </CSSTransition>\n                    </TransitionGroup>\n                    <NextButton\n                        type=\"primary\"\n                        disabled={isNextDisabled}\n                        block\n                        onClick={goNext}\n                        size=\"large\"\n                    >\n                        Next\n                    </NextButton>\n                </>\n            )}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader, Input } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title, Text } = Typography\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid lightgray;\n    padding: 16px;\n`\nconst Structure = styled.div`\n    margin-top: 16px;\n    display: flex;\n    padding: 16px 0px;\n    overflow: auto;\n    flex-wrap: wrap;\n`\nconst AddStructure = styled.div`\n    height: 32px;\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n`\nconst RootNodeContainer = styled.div``\nconst ChildNodeContainer = styled.div``\nconst RootNode = styled.div`\n    width: 300px;\n`\nconst ChildNode = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: 8px;\n    position: relative;\n    width: 300px;\n`\nconst Box = styled.div`\n    height: 32px;\n    width: 32px;\n        &:before {\n            position: absolute;\n            height: 32px;\n            margin-left: 11px;\n            border-left: 1px solid #d9d9d9;\n            content: \" \";\n        }\n        &:after {\n            position: absolute;\n            width: 17px;\n            height: 16px;\n            margin-left: 11px;\n            border-bottom: 1px solid #d9d9d9;\n            content: \" \";\n    }\n    }\n`\nconst Tree = styled.div`\n    margin-right: 24px;\n    margin-bottom: 80px;\n`\nfunction createMarkup(html) {\n    return { __html: html }\n}\n\nconst defaultTree = [\n    {\n        id: 0,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n    {\n        id: 1,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n    {\n        id: 2,\n        children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n    },\n]\nconst defaultInput = [\n    {\n        id: 0,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n    {\n        id: 1,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n    {\n        id: 2,\n        children: [\n            { id: 0, value: '' },\n            { id: 1, value: '' },\n            { id: 2, value: '' },\n        ],\n    },\n]\n\nexport default function CreateStructure() {\n    const { goBack, push } = useHistory()\n    const { id } = useParams()\n    const [treeData, setTreeData] = React.useState(defaultTree)\n    const inputRefs = React.useRef(defaultInput)\n\n    function handleClick(id) {\n        localStorage.setItem(\n            'structure',\n            JSON.stringify(inputRefs.current || {})\n        )\n        push(`/case/${item.id}`)\n    }\n    function handleNodeEnterPress(ev) {\n        console.log('called')\n        const rootId = ev.target.id.split('_')[1]\n        const child = {\n            id: treeData[rootId].children.length,\n        }\n        const child2 = {\n            id: treeData[rootId].children.length,\n        }\n        const newTreeData = [...treeData]\n        newTreeData[rootId].children.push(child)\n        setTreeData(newTreeData)\n        inputRefs.current[rootId].children.push(child2)\n        setTimeout(() => {\n            const lastTextBox = document.getElementById(\n                `root_${rootId}_child_${\n                    inputRefs.current[rootId].children.length - 1\n                }`\n            )\n            lastTextBox.focus()\n        }, 100)\n    }\n    function handleAddNewBucket() {\n        const child = {\n            id: treeData.length,\n            children: [{ id: 0 }, { id: 1 }, { id: 2 }],\n        }\n        const child2 = {\n            id: treeData.length,\n            children: [\n                { id: 0, value: '' },\n                { id: 1, value: '' },\n                { id: 2, value: '' },\n            ],\n        }\n        const tree = [...treeData]\n        tree.push(child)\n        setTreeData(tree)\n        inputRefs.current.push(child2)\n        setTimeout(() => {\n            const lastTextBox = document.getElementById(\n                `root_${tree.length - 1}`\n            )\n            lastTextBox.focus()\n        }, 100)\n    }\n    const item = staticData.find((e) => e.id.toString() === id)\n\n    function handleInputChange(ev) {\n        const { id, value } = ev.target\n        const [, rootId, , childId = null] = id.split('_')\n\n        if (!childId) {\n            inputRefs.current[rootId].value = value\n        } else {\n            inputRefs.current[rootId].children[childId].value = value\n        }\n    }\n    return (\n        <Wrapper>\n            <Header>\n                <PageHeader subTitle=\"Back to Case\" onBack={goBack} />\n            </Header>\n            <Body>\n                <div\n                    dangerouslySetInnerHTML={createMarkup(\n                        item.detailedDescription\n                    )}\n                />\n            </Body>\n            <Structure>\n                {treeData.map((tree) => (\n                    <Tree key={tree.id}>\n                        <RootNodeContainer>\n                            <RootNode>\n                                <Input\n                                    placeholder={`Bucket ${tree.id + 1}`}\n                                    autoComplete=\"false\"\n                                    onPressEnter={handleNodeEnterPress}\n                                    id={`root_${tree.id}`}\n                                    onChange={handleInputChange}\n                                />\n                            </RootNode>\n                        </RootNodeContainer>\n                        <ChildNodeContainer>\n                            {tree.children.map((child) => (\n                                <ChildNode key={child.id}>\n                                    <Box />\n                                    <Input\n                                        placeholder=\"Sub topic\"\n                                        autoComplete=\"false\"\n                                        onPressEnter={handleNodeEnterPress}\n                                        id={`root_${tree.id}_child_${child.id}`}\n                                        onChange={handleInputChange}\n                                    />\n                                </ChildNode>\n                            ))}\n                        </ChildNodeContainer>\n                    </Tree>\n                ))}\n                <AddStructure onClick={handleAddNewBucket}>\n                    <PlusCircleOutlined /> &nbsp;&nbsp;\n                    <Text>Add a new bucket</Text>\n                </AddStructure>\n            </Structure>\n            <br />\n            <Button type=\"primary\" block onClick={handleClick}>\n                Submit\n            </Button>\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Typography, Button, PageHeader, Input } from 'antd'\nimport { staticData } from '../../Cases.fixtures'\n\nconst { Title, Text } = Typography\nconst Wrapper = styled.div`\n    margin: 0 auto;\n`\nconst Header = styled.div`\n    border-bottom: 1px solid #eadddd;\n`\nconst Body = styled.div`\n    margin-top: 16px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    border: 1px solid #f3f0f0;\n    padding: 16px;\n    min-height: 300px;\n`\nconst Questions = styled.div`\n    margin-top: 16px;\n    display: flex;\n    padding: 16px 0px;\n    overflow: auto;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`\nconst Question = styled.div`\n    display: flex;\n    padding: 16px;\n    align-items: center;\n    border: 1px solid #f3f0f0;\n    max-width: 47%;\n    width: 47%;\n    margin-bottom: 8px;\n    cursor: pointer;\n    &:hover {\n        background: #f3f0f0;\n        cursor: pointer;\n    }\n    background-color: ${(props) => (props.selected ? '#f3f0f0' : '')};\n`\nexport default function ClarifyingQuestions() {\n    const { goBack, push } = useHistory()\n    const { id } = useParams()\n    const item = staticData.find((e) => e.id.toString() === id)\n    const [questions, setQuestions] = React.useState([])\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null)\n    const list = React.useRef([])\n\n    React.useEffect(() => {\n        async function getData() {\n            try {\n                const res = await fetch(\n                    `https://raw.githubusercontent.com/hannadrehman/flow-mgt/master/src/case-${id}.json`,\n                    {}\n                )\n                const json = await res.json()\n                setQuestions(json)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getData()\n    }, [id])\n    \n    function handleClick(question) {\n        setSelectedQuestion(question)\n        list.current.push(question)\n        setQuestions((prevQuestions) =>\n            prevQuestions.map((item) => {\n                const ques = { ...item }\n                if (ques.id === question.id) {\n                    ques.selected = true\n                }\n                return ques\n            })\n        )\n    }\n    function handleCreate(){\n      localStorage.setItem(\n          'questions',\n          JSON.stringify(list.current || {})\n      )\n      push(`/create-structure/${item.id}`)\n    }\n    return (\n        <div>\n            <Header>\n                <PageHeader subTitle=\"Back to Case\" onBack={goBack} />\n            </Header>\n            <Body>\n                {selectedQuestion && (\n                    <div>\n                        {selectedQuestion.type === 'text' && (\n                            <Text>{selectedQuestion.text}</Text>\n                        )}\n                        {selectedQuestion.type === 'image' && (\n                            <img src={selectedQuestion.imageUrl} alt=\"img\" />\n                        )}\n                    </div>\n                )}\n            </Body>\n            <Questions>\n                {questions.map((question) => (\n                    <Question\n                        key={question.id}\n                        onClick={() => handleClick(question)}\n                        selected={question.selected}\n                    >\n                        <Text>{question.question}</Text>\n                    </Question>\n                ))}\n            </Questions>\n            <Button type=\"primary\" block onClick={handleCreate}>\n                Create Structure\n            </Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport HomePage from './HomePage/HomePage.jsx'\nimport ListPage from './ListPage/ListPage.jsx'\nimport DetailsPage from './DetailsPage/DetailsPage.jsx'\nimport CasePage from './CasePage/CasePage.jsx'\nimport CreateStructure from './CreateStructure/CreateStructure.jsx'\nimport ClearifyingQuestions from './ClearifyingQuestions/ClearifyingQuestions.jsx'\n\nexport default function Router() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\">\n                    <HomePage />\n                </Route>\n                <Route exact path=\"/list\">\n                    <ListPage />\n                </Route>\n                <Route exact path=\"/details/:id\">\n                    <DetailsPage />\n                </Route>\n                <Route exact path=\"/case/:id/:qID?\">\n                    <CasePage />\n                </Route>\n                <Route exact path=\"/create-structure/:id\">\n                    <CreateStructure />\n                </Route>\n                <Route exact path=\"/clearifying-questions/:id\">\n                    <ClearifyingQuestions />\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n","import React from 'react'\nimport Routes from './Routes'\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Routes />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}